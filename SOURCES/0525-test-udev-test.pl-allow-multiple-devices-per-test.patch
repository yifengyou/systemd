From 3f90eeef6a8469de6ad490efb62a5be80188f41f Mon Sep 17 00:00:00 2001
From: Martin Wilck <mwilck@suse.com>
Date: Fri, 20 Apr 2018 22:38:30 +0200
Subject: [PATCH] test/udev-test.pl: allow multiple devices per test

Allow testing cases where multiple devices are added and removed.
This implies a change of the data structure: every test allows
for multiple devices to be added, and "exp_name" etc. are now properties
of the device, not of the test.

(cherry picked from commit 255c05b72455dcad1b5552d12a813b31f68201a7)

Related: #1642728
---
 test/udev-test.pl | 1352 +++++++++++++++++++++++++++++++--------------
 1 file changed, 929 insertions(+), 423 deletions(-)

diff --git a/test/udev-test.pl b/test/udev-test.pl
index a4deffacb9..bd5401da75 100755
--- a/test/udev-test.pl
+++ b/test/udev-test.pl
@@ -48,17 +48,28 @@ $rules_10k_tags_continuation .= "TAG+=\"test10000\"\\n";
 my @tests = (
         {
                 desc            => "no rules",
-                devpath         => "/devices/pci0000:00/0000:00:1f.2/host0/target0:0:0/0:0:0:0/block/sda",
-                exp_name        => "sda",
-                exp_rem_error   => "yes",
+                devices => [
+                        {
+                                devpath         => "/devices/pci0000:00/0000:00:1f.2/host0/target0:0:0/0:0:0:0/block/sda",
+                                exp_name        => "sda" ,
+                                exp_rem_error   => "yes",
+                        },
+                        {
+                                devpath         => "/devices/pci0000:00/0000:00:1f.2/host0/target0:0:0/0:0:0:0/block/sda/sda1",
+                                exp_name        => "sda1" ,
+                                exp_rem_error   => "yes",
+                        }],
                 rules           => <<EOF
 #
 EOF
         },
         {
                 desc            => "label test of scsi disc",
-                devpath         => "/devices/pci0000:00/0000:00:1f.2/host0/target0:0:0/0:0:0:0/block/sda",
-                exp_name        => "boot_disk",
+                devices => [
+                        {
+                                devpath         => "/devices/pci0000:00/0000:00:1f.2/host0/target0:0:0/0:0:0:0/block/sda",
+                                exp_name        => "boot_disk" ,
+                        }],
                 rules           => <<EOF
 SUBSYSTEMS=="scsi", ATTRS{vendor}=="ATA", SYMLINK+="boot_disk%n"
 KERNEL=="ttyACM0", SYMLINK+="modem"
@@ -66,8 +77,11 @@ EOF
         },
         {
                 desc            => "label test of scsi disc",
-                devpath         => "/devices/pci0000:00/0000:00:1f.2/host0/target0:0:0/0:0:0:0/block/sda",
-                exp_name        => "boot_disk",
+                devices => [
+                        {
+                                devpath         => "/devices/pci0000:00/0000:00:1f.2/host0/target0:0:0/0:0:0:0/block/sda",
+                                exp_name        => "boot_disk" ,
+                        }],
                 rules           => <<EOF
 SUBSYSTEMS=="scsi", ATTRS{vendor}=="ATA", SYMLINK+="boot_disk%n"
 KERNEL=="ttyACM0", SYMLINK+="modem"
@@ -75,8 +89,11 @@ EOF
         },
         {
                 desc            => "label test of scsi disc",
-                devpath         => "/devices/pci0000:00/0000:00:1f.2/host0/target0:0:0/0:0:0:0/block/sda",
-                exp_name        => "boot_disk",
+                devices => [
+                        {
+                                devpath         => "/devices/pci0000:00/0000:00:1f.2/host0/target0:0:0/0:0:0:0/block/sda",
+                                exp_name        => "boot_disk" ,
+                        }],
                 rules           => <<EOF
 SUBSYSTEMS=="scsi", ATTRS{vendor}=="ATA", SYMLINK+="boot_disk%n"
 KERNEL=="ttyACM0", SYMLINK+="modem"
@@ -84,16 +101,22 @@ EOF
         },
         {
                 desc            => "label test of scsi partition",
-                devpath         => "/devices/pci0000:00/0000:00:1f.2/host0/target0:0:0/0:0:0:0/block/sda/sda1",
-                exp_name        => "boot_disk1",
+                devices => [
+                        {
+                                devpath         => "/devices/pci0000:00/0000:00:1f.2/host0/target0:0:0/0:0:0:0/block/sda/sda1",
+                                exp_name        => "boot_disk1" ,
+                        }],
                 rules           => <<EOF
 SUBSYSTEMS=="scsi", ATTRS{vendor}=="ATA", SYMLINK+="boot_disk%n"
 EOF
         },
         {
                 desc            => "label test of pattern match",
-                devpath         => "/devices/pci0000:00/0000:00:1f.2/host0/target0:0:0/0:0:0:0/block/sda/sda1",
-                exp_name        => "boot_disk1",
+                devices => [
+                        {
+                                devpath         => "/devices/pci0000:00/0000:00:1f.2/host0/target0:0:0/0:0:0:0/block/sda/sda1",
+                                exp_name        => "boot_disk1" ,
+                        }],
                 rules           => <<EOF
 SUBSYSTEMS=="scsi", ATTRS{vendor}=="?ATA", SYMLINK+="boot_disk%n-1"
 SUBSYSTEMS=="scsi", ATTRS{vendor}=="ATA?", SYMLINK+="boot_disk%n-2"
@@ -103,8 +126,11 @@ EOF
         },
         {
                 desc            => "label test of multiple sysfs files",
-                devpath         => "/devices/pci0000:00/0000:00:1f.2/host0/target0:0:0/0:0:0:0/block/sda/sda1",
-                exp_name        => "boot_disk1",
+                devices => [
+                        {
+                                devpath         => "/devices/pci0000:00/0000:00:1f.2/host0/target0:0:0/0:0:0:0/block/sda/sda1",
+                                exp_name        => "boot_disk1" ,
+                        }],
                 rules           => <<EOF
 SUBSYSTEMS=="scsi", ATTRS{vendor}=="ATA", ATTRS{model}=="ST910021AS X ", SYMLINK+="boot_diskX%n"
 SUBSYSTEMS=="scsi", ATTRS{vendor}=="ATA", ATTRS{model}=="ST910021AS", SYMLINK+="boot_disk%n"
@@ -112,8 +138,11 @@ EOF
         },
         {
                 desc            => "label test of max sysfs files (skip invalid rule)",
-                devpath         => "/devices/pci0000:00/0000:00:1f.2/host0/target0:0:0/0:0:0:0/block/sda/sda1",
-                exp_name        => "boot_disk1",
+                devices => [
+                        {
+                                devpath         => "/devices/pci0000:00/0000:00:1f.2/host0/target0:0:0/0:0:0:0/block/sda/sda1",
+                                exp_name        => "boot_disk1" ,
+                        }],
                 rules           => <<EOF
 SUBSYSTEMS=="scsi", ATTRS{vendor}=="ATA", ATTRS{model}=="ST910021AS", ATTRS{scsi_level}=="6", ATTRS{rev}=="4.06", ATTRS{type}=="0", ATTRS{queue_depth}=="32", SYMLINK+="boot_diskXX%n"
 SUBSYSTEMS=="scsi", ATTRS{vendor}=="ATA", ATTRS{model}=="ST910021AS", ATTRS{scsi_level}=="6", ATTRS{rev}=="4.06", ATTRS{type}=="0", SYMLINK+="boot_disk%n"
@@ -121,16 +150,22 @@ EOF
         },
         {
                 desc            => "catch device by *",
-                devpath         => "/devices/pci0000:00/0000:00:1d.7/usb5/5-2/5-2:1.0/tty/ttyACM0",
-                exp_name        => "modem/0",
+                devices => [
+                        {
+                                devpath         => "/devices/pci0000:00/0000:00:1d.7/usb5/5-2/5-2:1.0/tty/ttyACM0",
+                                exp_name        => "modem/0" ,
+                        }],
                 rules           => <<EOF
 KERNEL=="ttyACM*", SYMLINK+="modem/%n"
 EOF
         },
         {
                 desc            => "catch device by * - take 2",
-                devpath         => "/devices/pci0000:00/0000:00:1d.7/usb5/5-2/5-2:1.0/tty/ttyACM0",
-                exp_name        => "modem/0",
+                devices => [
+                        {
+                                devpath         => "/devices/pci0000:00/0000:00:1d.7/usb5/5-2/5-2:1.0/tty/ttyACM0",
+                                exp_name        => "modem/0" ,
+                        }],
                 rules           => <<EOF
 KERNEL=="*ACM1", SYMLINK+="bad"
 KERNEL=="*ACM0", SYMLINK+="modem/%n"
@@ -138,8 +173,11 @@ EOF
         },
         {
                 desc            => "catch device by ?",
-                devpath         => "/devices/pci0000:00/0000:00:1d.7/usb5/5-2/5-2:1.0/tty/ttyACM0",
-                exp_name        => "modem/0",
+                devices => [
+                        {
+                                devpath         => "/devices/pci0000:00/0000:00:1d.7/usb5/5-2/5-2:1.0/tty/ttyACM0",
+                                exp_name        => "modem/0" ,
+                        }],
                 rules           => <<EOF
 KERNEL=="ttyACM??*", SYMLINK+="modem/%n-1"
 KERNEL=="ttyACM??", SYMLINK+="modem/%n-2"
@@ -148,8 +186,11 @@ EOF
         },
         {
                 desc            => "catch device by character class",
-                devpath         => "/devices/pci0000:00/0000:00:1d.7/usb5/5-2/5-2:1.0/tty/ttyACM0",
-                exp_name        => "modem/0",
+                devices => [
+                        {
+                                devpath         => "/devices/pci0000:00/0000:00:1d.7/usb5/5-2/5-2:1.0/tty/ttyACM0",
+                                exp_name        => "modem/0" ,
+                        }],
                 rules           => <<EOF
 KERNEL=="ttyACM[A-Z]*", SYMLINK+="modem/%n-1"
 KERNEL=="ttyACM?[0-9]", SYMLINK+="modem/%n-2"
@@ -158,16 +199,22 @@ EOF
         },
         {
                 desc            => "replace kernel name",
-                devpath         => "/devices/pci0000:00/0000:00:1d.7/usb5/5-2/5-2:1.0/tty/ttyACM0",
-                exp_name        => "modem",
+                devices => [
+                        {
+                                devpath         => "/devices/pci0000:00/0000:00:1d.7/usb5/5-2/5-2:1.0/tty/ttyACM0",
+                                exp_name        => "modem" ,
+                        }],
                 rules           => <<EOF
 KERNEL=="ttyACM0", SYMLINK+="modem"
 EOF
         },
         {
                 desc            => "Handle comment lines in config file (and replace kernel name)",
-                devpath         => "/devices/pci0000:00/0000:00:1d.7/usb5/5-2/5-2:1.0/tty/ttyACM0",
-                exp_name        => "modem",
+                devices => [
+                        {
+                                devpath         => "/devices/pci0000:00/0000:00:1d.7/usb5/5-2/5-2:1.0/tty/ttyACM0",
+                                exp_name        => "modem" ,
+                        }],
                 rules           => <<EOF
 # this is a comment
 KERNEL=="ttyACM0", SYMLINK+="modem"
@@ -176,8 +223,11 @@ EOF
         },
         {
                 desc            => "Handle comment lines in config file with whitespace (and replace kernel name)",
-                devpath         => "/devices/pci0000:00/0000:00:1d.7/usb5/5-2/5-2:1.0/tty/ttyACM0",
-                exp_name        => "modem",
+                devices => [
+                        {
+                                devpath         => "/devices/pci0000:00/0000:00:1d.7/usb5/5-2/5-2:1.0/tty/ttyACM0",
+                                exp_name        => "modem" ,
+                        }],
                 rules           => <<EOF
  # this is a comment with whitespace before the comment
 KERNEL=="ttyACM0", SYMLINK+="modem"
@@ -186,8 +236,11 @@ EOF
         },
         {
                 desc            => "Handle whitespace only lines (and replace kernel name)",
-                devpath         => "/devices/pci0000:00/0000:00:1d.7/usb5/5-2/5-2:1.0/tty/ttyACM0",
-                exp_name        => "whitespace",
+                devices => [
+                        {
+                                devpath         => "/devices/pci0000:00/0000:00:1d.7/usb5/5-2/5-2:1.0/tty/ttyACM0",
+                                exp_name        => "whitespace" ,
+                        }],
                 rules           => <<EOF
 
 
@@ -201,8 +254,11 @@ EOF
         },
         {
                 desc            => "Handle empty lines in config file (and replace kernel name)",
-                devpath         => "/devices/pci0000:00/0000:00:1d.7/usb5/5-2/5-2:1.0/tty/ttyACM0",
-                exp_name        => "modem",
+                devices => [
+                        {
+                                devpath         => "/devices/pci0000:00/0000:00:1d.7/usb5/5-2/5-2:1.0/tty/ttyACM0",
+                                exp_name        => "modem" ,
+                        }],
                 rules           => <<EOF
 
 KERNEL=="ttyACM0", SYMLINK+="modem"
@@ -211,8 +267,11 @@ EOF
         },
         {
                 desc            => "Handle backslashed multi lines in config file (and replace kernel name)",
-                devpath         => "/devices/pci0000:00/0000:00:1d.7/usb5/5-2/5-2:1.0/tty/ttyACM0",
-                exp_name        => "modem",
+                devices => [
+                        {
+                                devpath         => "/devices/pci0000:00/0000:00:1d.7/usb5/5-2/5-2:1.0/tty/ttyACM0",
+                                exp_name        => "modem" ,
+                        }],
                 rules           => <<EOF
 KERNEL=="ttyACM0", \\
 SYMLINK+="modem"
@@ -221,16 +280,22 @@ EOF
         },
         {
                 desc            => "preserve backslashes, if they are not for a newline",
-                devpath         => "/devices/pci0000:00/0000:00:1d.7/usb5/5-2/5-2:1.0/tty/ttyACM0",
-                exp_name        => "aaa",
+                devices => [
+                        {
+                                devpath         => "/devices/pci0000:00/0000:00:1d.7/usb5/5-2/5-2:1.0/tty/ttyACM0",
+                                exp_name        => "aaa",
+                        }],
                 rules           => <<EOF
 KERNEL=="ttyACM0", PROGRAM=="/bin/echo -e \\101", RESULT=="A", SYMLINK+="aaa"
 EOF
         },
         {
                 desc            => "Handle stupid backslashed multi lines in config file (and replace kernel name)",
-                devpath         => "/devices/pci0000:00/0000:00:1d.7/usb5/5-2/5-2:1.0/tty/ttyACM0",
-                exp_name        => "modem",
+                devices => [
+                        {
+                                devpath         => "/devices/pci0000:00/0000:00:1d.7/usb5/5-2/5-2:1.0/tty/ttyACM0",
+                                exp_name        => "modem" ,
+                        }],
                 rules           => <<EOF
 
 #
@@ -247,41 +312,56 @@ EOF
         },
         {
                 desc            => "subdirectory handling",
-                devpath         => "/devices/pci0000:00/0000:00:1d.7/usb5/5-2/5-2:1.0/tty/ttyACM0",
-                exp_name        => "sub/direct/ory/modem",
+                devices => [
+                        {
+                                devpath         => "/devices/pci0000:00/0000:00:1d.7/usb5/5-2/5-2:1.0/tty/ttyACM0",
+                                exp_name        => "sub/direct/ory/modem" ,
+                        }],
                 rules           => <<EOF
 KERNEL=="ttyACM0", SYMLINK+="sub/direct/ory/modem"
 EOF
         },
         {
                 desc            => "parent device name match of scsi partition",
-                devpath         => "/devices/pci0000:00/0000:00:1f.2/host0/target0:0:0/0:0:0:0/block/sda/sda5",
-                exp_name        => "first_disk5",
+                devices => [
+                        {
+                                devpath         => "/devices/pci0000:00/0000:00:1f.2/host0/target0:0:0/0:0:0:0/block/sda/sda5",
+                                exp_name        => "first_disk5" ,
+                        }],
                 rules           => <<EOF
 SUBSYSTEMS=="scsi", KERNELS=="0:0:0:0", SYMLINK+="first_disk%n"
 EOF
         },
         {
                 desc            => "test substitution chars",
-                devpath         => "/devices/pci0000:00/0000:00:1f.2/host0/target0:0:0/0:0:0:0/block/sda/sda5",
-                exp_name        => "Major:8:minor:5:kernelnumber:5:id:0:0:0:0",
+                devices => [
+                        {
+                                devpath         => "/devices/pci0000:00/0000:00:1f.2/host0/target0:0:0/0:0:0:0/block/sda/sda5",
+                                exp_name        => "Major:8:minor:5:kernelnumber:5:id:0:0:0:0" ,
+                        }],
                 rules           => <<EOF
 SUBSYSTEMS=="scsi", KERNELS=="0:0:0:0", SYMLINK+="Major:%M:minor:%m:kernelnumber:%n:id:%b"
 EOF
         },
         {
                 desc            => "import of shell-value returned from program",
-                devpath         => "/devices/pci0000:00/0000:00:1f.2/host0/target0:0:0/0:0:0:0/block/sda",
-                exp_name        => "node12345678",
+                devices => [
+                        {
+                                devpath         => "/devices/pci0000:00/0000:00:1f.2/host0/target0:0:0/0:0:0:0/block/sda",
+                                exp_name        => "node12345678",
+                        }],
                 rules           => <<EOF
 SUBSYSTEMS=="scsi", IMPORT{program}="/bin/echo -e \' TEST_KEY=12345678\\n  TEST_key2=98765\'", SYMLINK+="node\$env{TEST_KEY}"
 KERNEL=="ttyACM0", SYMLINK+="modem"
 EOF
         },
         {
-                desc            => "sustitution of sysfs value (%s{file})",
-                devpath         => "/devices/pci0000:00/0000:00:1f.2/host0/target0:0:0/0:0:0:0/block/sda",
-                exp_name        => "disk-ATA-sda",
+                desc            => "substitution of sysfs value (%s{file})",
+                devices => [
+                        {
+                                devpath         => "/devices/pci0000:00/0000:00:1f.2/host0/target0:0:0/0:0:0:0/block/sda",
+                                exp_name        => "disk-ATA-sda" ,
+                        }],
                 rules           => <<EOF
 SUBSYSTEMS=="scsi", ATTRS{vendor}=="ATA", SYMLINK+="disk-%s{vendor}-%k"
 KERNEL=="ttyACM0", SYMLINK+="modem"
@@ -289,9 +369,12 @@ EOF
         },
         {
                 desc            => "program result substitution",
-                devpath         => "/devices/pci0000:00/0000:00:1f.2/host0/target0:0:0/0:0:0:0/block/sda/sda5",
-                exp_name        => "special-device-5",
-                not_exp_name    => "not",
+                devices => [
+                        {
+                                devpath         => "/devices/pci0000:00/0000:00:1f.2/host0/target0:0:0/0:0:0:0/block/sda/sda5",
+                                exp_name        => "special-device-5" ,
+                                not_exp_name    => "not" ,
+                        }],
                 rules           => <<EOF
 SUBSYSTEMS=="scsi", PROGRAM=="/bin/echo -n special-device", RESULT=="-special-*", SYMLINK+="not"
 SUBSYSTEMS=="scsi", PROGRAM=="/bin/echo -n special-device", RESULT=="special-*", SYMLINK+="%c-%n"
@@ -299,128 +382,176 @@ EOF
         },
         {
                 desc            => "program result substitution (newline removal)",
-                devpath         => "/devices/pci0000:00/0000:00:1f.2/host0/target0:0:0/0:0:0:0/block/sda/sda5",
-                exp_name        => "newline_removed",
+                devices => [
+                        {
+                                devpath         => "/devices/pci0000:00/0000:00:1f.2/host0/target0:0:0/0:0:0:0/block/sda/sda5",
+                                exp_name        => "newline_removed" ,
+                        }],
                 rules           => <<EOF
 SUBSYSTEMS=="scsi", PROGRAM=="/bin/echo test", RESULT=="test", SYMLINK+="newline_removed"
 EOF
         },
         {
                 desc            => "program result substitution",
-                devpath         => "/devices/pci0000:00/0000:00:1f.2/host0/target0:0:0/0:0:0:0/block/sda/sda5",
-                exp_name        => "test-0:0:0:0",
+                devices => [
+                        {
+                                devpath         => "/devices/pci0000:00/0000:00:1f.2/host0/target0:0:0/0:0:0:0/block/sda/sda5",
+                                exp_name        => "test-0:0:0:0" ,
+                        }],
                 rules           => <<EOF
 SUBSYSTEMS=="scsi", PROGRAM=="/bin/echo -n test-%b", RESULT=="test-0:0*", SYMLINK+="%c"
 EOF
         },
         {
                 desc            => "program with lots of arguments",
-                devpath         => "/devices/pci0000:00/0000:00:1f.2/host0/target0:0:0/0:0:0:0/block/sda/sda5",
-                exp_name        => "foo9",
+                devices => [
+                        {
+                                devpath         => "/devices/pci0000:00/0000:00:1f.2/host0/target0:0:0/0:0:0:0/block/sda/sda5",
+                                exp_name        => "foo9" ,
+                        }],
                 rules           => <<EOF
 SUBSYSTEMS=="scsi", PROGRAM=="/bin/echo -n foo3 foo4 foo5 foo6 foo7 foo8 foo9", KERNEL=="sda5", SYMLINK+="%c{7}"
 EOF
         },
         {
                 desc            => "program with subshell",
-                devpath         => "/devices/pci0000:00/0000:00:1f.2/host0/target0:0:0/0:0:0:0/block/sda/sda5",
-                exp_name        => "bar9",
+                devices => [
+                        {
+                                devpath         => "/devices/pci0000:00/0000:00:1f.2/host0/target0:0:0/0:0:0:0/block/sda/sda5",
+                                exp_name        => "bar9" ,
+                        }],
                 rules           => <<EOF
 SUBSYSTEMS=="scsi", PROGRAM=="/bin/sh -c 'echo foo3 foo4 foo5 foo6 foo7 foo8 foo9 | sed  s/foo9/bar9/'", KERNEL=="sda5", SYMLINK+="%c{7}"
 EOF
         },
         {
                 desc            => "program arguments combined with apostrophes",
-                devpath         => "/devices/pci0000:00/0000:00:1f.2/host0/target0:0:0/0:0:0:0/block/sda/sda5",
-                exp_name        => "foo7",
+                devices => [
+                        {
+                                devpath         => "/devices/pci0000:00/0000:00:1f.2/host0/target0:0:0/0:0:0:0/block/sda/sda5",
+                                exp_name        => "foo7" ,
+                        }],
                 rules           => <<EOF
 SUBSYSTEMS=="scsi", PROGRAM=="/bin/echo -n 'foo3 foo4'   'foo5   foo6   foo7 foo8'", KERNEL=="sda5", SYMLINK+="%c{5}"
 EOF
         },
         {
                 desc            => "program arguments combined with escaped double quotes, part 1",
-                devpath         => "/devices/pci0000:00/0000:00:1f.2/host0/target0:0:0/0:0:0:0/block/sda/sda5",
-                exp_name        => "foo2",
+                devices => [
+                        {
+                                devpath         => "/devices/pci0000:00/0000:00:1f.2/host0/target0:0:0/0:0:0:0/block/sda/sda5",
+                                exp_name        => "foo2" ,
+                        }],
                 rules           => <<EOF
 SUBSYSTEMS=="scsi", PROGRAM=="/bin/sh -c 'printf %%s \\\"foo1 foo2\\\" | grep \\\"foo1 foo2\\\"'", KERNEL=="sda5", SYMLINK+="%c{2}"
 EOF
         },
         {
                 desc            => "program arguments combined with escaped double quotes, part 2",
-                devpath         => "/devices/pci0000:00/0000:00:1f.2/host0/target0:0:0/0:0:0:0/block/sda/sda5",
-                exp_name        => "foo2",
+                devices => [
+                        {
+                                devpath         => "/devices/pci0000:00/0000:00:1f.2/host0/target0:0:0/0:0:0:0/block/sda/sda5",
+                                exp_name        => "foo2" ,
+                        }],
                 rules           => <<EOF
 SUBSYSTEMS=="scsi", PROGRAM=="/bin/sh -c \\\"printf %%s 'foo1 foo2' | grep 'foo1 foo2'\\\"", KERNEL=="sda5", SYMLINK+="%c{2}"
 EOF
         },
         {
                 desc            => "program arguments combined with escaped double quotes, part 3",
-                devpath         => "/devices/pci0000:00/0000:00:1f.2/host0/target0:0:0/0:0:0:0/block/sda/sda5",
-                exp_name        => "foo2",
+                devices => [
+                        {
+                                devpath         => "/devices/pci0000:00/0000:00:1f.2/host0/target0:0:0/0:0:0:0/block/sda/sda5",
+                                exp_name        => "foo2" ,
+                        }],
                 rules           => <<EOF
 SUBSYSTEMS=="scsi", PROGRAM=="/bin/sh -c 'printf \\\"%%s %%s\\\" \\\"foo1 foo2\\\" \\\"foo3\\\"| grep \\\"foo1 foo2\\\"'", KERNEL=="sda5", SYMLINK+="%c{2}"
 EOF
         },
         {
                 desc            => "characters before the %c{N} substitution",
-                devpath         => "/devices/pci0000:00/0000:00:1f.2/host0/target0:0:0/0:0:0:0/block/sda/sda5",
-                exp_name        => "my-foo9",
+                devices => [
+                        {
+                                devpath         => "/devices/pci0000:00/0000:00:1f.2/host0/target0:0:0/0:0:0:0/block/sda/sda5",
+                                exp_name        => "my-foo9" ,
+                        }],
                 rules           => <<EOF
 SUBSYSTEMS=="scsi", PROGRAM=="/bin/echo -n foo3 foo4 foo5 foo6 foo7 foo8 foo9", KERNEL=="sda5", SYMLINK+="my-%c{7}"
 EOF
         },
         {
                 desc            => "substitute the second to last argument",
-                devpath         => "/devices/pci0000:00/0000:00:1f.2/host0/target0:0:0/0:0:0:0/block/sda/sda5",
-                exp_name        => "my-foo8",
+                devices => [
+                        {
+                                devpath         => "/devices/pci0000:00/0000:00:1f.2/host0/target0:0:0/0:0:0:0/block/sda/sda5",
+                                exp_name        => "my-foo8" ,
+                        }],
                 rules           => <<EOF
 SUBSYSTEMS=="scsi", PROGRAM=="/bin/echo -n foo3 foo4 foo5 foo6 foo7 foo8 foo9", KERNEL=="sda5", SYMLINK+="my-%c{6}"
 EOF
         },
         {
                 desc            => "test substitution by variable name",
-                devpath         => "/devices/pci0000:00/0000:00:1f.2/host0/target0:0:0/0:0:0:0/block/sda/sda5",
-                exp_name        => "Major:8-minor:5-kernelnumber:5-id:0:0:0:0",
+                devices => [
+                        {
+                                devpath         => "/devices/pci0000:00/0000:00:1f.2/host0/target0:0:0/0:0:0:0/block/sda/sda5",
+                                exp_name        => "Major:8-minor:5-kernelnumber:5-id:0:0:0:0",
+                        }],
                 rules           => <<EOF
 SUBSYSTEMS=="scsi", KERNELS=="0:0:0:0", SYMLINK+="Major:\$major-minor:\$minor-kernelnumber:\$number-id:\$id"
 EOF
         },
         {
                 desc            => "test substitution by variable name 2",
-                devpath         => "/devices/pci0000:00/0000:00:1f.2/host0/target0:0:0/0:0:0:0/block/sda/sda5",
-                exp_name        => "Major:8-minor:5-kernelnumber:5-id:0:0:0:0",
+                devices => [
+                        {
+                                devpath         => "/devices/pci0000:00/0000:00:1f.2/host0/target0:0:0/0:0:0:0/block/sda/sda5",
+                                exp_name        => "Major:8-minor:5-kernelnumber:5-id:0:0:0:0",
+                        }],
                 rules           => <<EOF
 SUBSYSTEMS=="scsi", KERNELS=="0:0:0:0", DEVPATH=="*/sda/*", SYMLINK+="Major:\$major-minor:%m-kernelnumber:\$number-id:\$id"
 EOF
         },
         {
                 desc            => "test substitution by variable name 3",
-                devpath         => "/devices/pci0000:00/0000:00:1f.2/host0/target0:0:0/0:0:0:0/block/sda/sda5",
-                exp_name        => "850:0:0:05",
+                devices => [
+                        {
+                                devpath         => "/devices/pci0000:00/0000:00:1f.2/host0/target0:0:0/0:0:0:0/block/sda/sda5",
+                                exp_name        => "850:0:0:05" ,
+                        }],
                 rules           => <<EOF
 SUBSYSTEMS=="scsi", KERNELS=="0:0:0:0", DEVPATH=="*/sda/*", SYMLINK+="%M%m%b%n"
 EOF
         },
         {
                 desc            => "test substitution by variable name 4",
-                devpath         => "/devices/pci0000:00/0000:00:1f.2/host0/target0:0:0/0:0:0:0/block/sda/sda5",
-                exp_name        => "855",
+                devices => [
+                        {
+                                devpath         => "/devices/pci0000:00/0000:00:1f.2/host0/target0:0:0/0:0:0:0/block/sda/sda5",
+                                exp_name        => "855" ,
+                        }],
                 rules           => <<EOF
 SUBSYSTEMS=="scsi", KERNELS=="0:0:0:0", DEVPATH=="*/sda/*", SYMLINK+="\$major\$minor\$number"
 EOF
         },
         {
                 desc            => "test substitution by variable name 5",
-                devpath         => "/devices/pci0000:00/0000:00:1f.2/host0/target0:0:0/0:0:0:0/block/sda/sda5",
-                exp_name        => "8550:0:0:0",
+                devices => [
+                        {
+                                devpath         => "/devices/pci0000:00/0000:00:1f.2/host0/target0:0:0/0:0:0:0/block/sda/sda5",
+                                exp_name        => "8550:0:0:0" ,
+                        }],
                 rules           => <<EOF
 SUBSYSTEMS=="scsi", KERNELS=="0:0:0:0", DEVPATH=="*/sda/*", SYMLINK+="\$major%m%n\$id"
 EOF
         },
         {
                 desc            => "non matching SUBSYSTEMS for device with no parent",
-                devpath         => "/devices/virtual/tty/console",
-                exp_name        => "TTY",
+                devices => [
+                        {
+                                devpath         => "/devices/virtual/tty/console",
+                                exp_name        => "TTY",
+                        }],
                 rules           => <<EOF
 SUBSYSTEMS=="scsi", PROGRAM=="/bin/echo -n foo", RESULT=="foo", SYMLINK+="foo"
 KERNEL=="console", SYMLINK+="TTY"
@@ -428,8 +559,11 @@ EOF
         },
         {
                 desc            => "non matching SUBSYSTEMS",
-                devpath         => "/devices/virtual/tty/console",
-                exp_name        => "TTY",
+                devices => [
+                        {
+                                devpath         => "/devices/virtual/tty/console",
+                                exp_name        => "TTY" ,
+                        }],
                 rules                => <<EOF
 SUBSYSTEMS=="foo", ATTRS{dev}=="5:1", SYMLINK+="foo"
 KERNEL=="console", SYMLINK+="TTY"
@@ -437,8 +571,11 @@ EOF
         },
         {
                 desc            => "ATTRS match",
-                devpath         => "/devices/virtual/tty/console",
-                exp_name        => "foo",
+                devices => [
+                        {
+                                devpath         => "/devices/virtual/tty/console",
+                                exp_name        => "foo" ,
+                        }],
                 rules           => <<EOF
 KERNEL=="console", SYMLINK+="TTY"
 ATTRS{dev}=="5:1", SYMLINK+="foo"
@@ -446,8 +583,11 @@ EOF
         },
         {
                 desc            => "ATTR (empty file)",
-                devpath         => "/devices/pci0000:00/0000:00:1f.2/host0/target0:0:0/0:0:0:0/block/sda",
-                exp_name        => "empty",
+                devices => [
+                        {
+                                devpath         => "/devices/pci0000:00/0000:00:1f.2/host0/target0:0:0/0:0:0:0/block/sda",
+                                exp_name        => "empty" ,
+                        }],
                 rules           => <<EOF
 KERNEL=="sda", ATTR{test_empty_file}=="?*", SYMLINK+="something"
 KERNEL=="sda", ATTR{test_empty_file}!="", SYMLINK+="not-empty"
@@ -457,8 +597,11 @@ EOF
         },
         {
                 desc            => "ATTR (non-existent file)",
-                devpath         => "/devices/pci0000:00/0000:00:1f.2/host0/target0:0:0/0:0:0:0/block/sda",
-                exp_name        => "non-existent",
+                devices => [
+                        {
+                                devpath         => "/devices/pci0000:00/0000:00:1f.2/host0/target0:0:0/0:0:0:0/block/sda",
+                                exp_name        => "non-existent" ,
+                        }],
                 rules           => <<EOF
 KERNEL=="sda", ATTR{nofile}=="?*", SYMLINK+="something"
 KERNEL=="sda", ATTR{nofile}!="", SYMLINK+="not-empty"
@@ -470,8 +613,11 @@ EOF
         },
         {
                 desc            => "program and bus type match",
-                devpath         => "/devices/pci0000:00/0000:00:1f.2/host0/target0:0:0/0:0:0:0/block/sda",
-                exp_name        => "scsi-0:0:0:0",
+                devices => [
+                        {
+                                devpath         => "/devices/pci0000:00/0000:00:1f.2/host0/target0:0:0/0:0:0:0/block/sda",
+                                exp_name        => "scsi-0:0:0:0" ,
+                        }],
                 rules           => <<EOF
 SUBSYSTEMS=="usb", PROGRAM=="/bin/echo -n usb-%b", SYMLINK+="%c"
 SUBSYSTEMS=="scsi", PROGRAM=="/bin/echo -n scsi-%b", SYMLINK+="%c"
@@ -480,16 +626,22 @@ EOF
         },
         {
                 desc            => "sysfs parent hierarchy",
-                devpath         => "/devices/pci0000:00/0000:00:1d.7/usb5/5-2/5-2:1.0/tty/ttyACM0",
-                exp_name        => "modem",
+                devices => [
+                        {
+                                devpath         => "/devices/pci0000:00/0000:00:1d.7/usb5/5-2/5-2:1.0/tty/ttyACM0",
+                                exp_name        => "modem" ,
+                        }],
                 rules           => <<EOF
 ATTRS{idProduct}=="007b", SYMLINK+="modem"
 EOF
         },
         {
                 desc            => "name test with ! in the name",
-                devpath         => "/devices/virtual/block/fake!blockdev0",
-                exp_name        => "is/a/fake/blockdev0",
+                devices => [
+                        {
+                                devpath         => "/devices/virtual/block/fake!blockdev0",
+                                exp_name        => "is/a/fake/blockdev0" ,
+                        }],
                 rules           => <<EOF
 SUBSYSTEMS=="scsi", SYMLINK+="is/not/a/%k"
 SUBSYSTEM=="block", SYMLINK+="is/a/%k"
@@ -498,17 +650,23 @@ EOF
         },
         {
                 desc            => "name test with ! in the name, but no matching rule",
-                devpath         => "/devices/virtual/block/fake!blockdev0",
-                exp_name        => "fake/blockdev0",
-                exp_rem_error   => "yes",
+                devices => [
+                        {
+                                devpath         => "/devices/virtual/block/fake!blockdev0",
+                                exp_name        => "fake/blockdev0" ,
+                                exp_rem_error   => "yes",
+                        }],
                 rules           => <<EOF
 KERNEL=="ttyACM0", SYMLINK+="modem"
 EOF
         },
         {
                 desc            => "KERNELS rule",
-                devpath         => "/devices/pci0000:00/0000:00:1f.2/host0/target0:0:0/0:0:0:0/block/sda",
-                exp_name        => "scsi-0:0:0:0",
+                devices => [
+                        {
+                                devpath         => "/devices/pci0000:00/0000:00:1f.2/host0/target0:0:0/0:0:0:0/block/sda",
+                                exp_name        => "scsi-0:0:0:0",
+                        }],
                 rules           => <<EOF
 SUBSYSTEMS=="usb", KERNELS=="0:0:0:0", SYMLINK+="not-scsi"
 SUBSYSTEMS=="scsi", KERNELS=="0:0:0:1", SYMLINK+="no-match"
@@ -519,8 +677,11 @@ EOF
         },
         {
                 desc            => "KERNELS wildcard all",
-                devpath         => "/devices/pci0000:00/0000:00:1f.2/host0/target0:0:0/0:0:0:0/block/sda",
-                exp_name        => "scsi-0:0:0:0",
+                devices => [
+                        {
+                                devpath         => "/devices/pci0000:00/0000:00:1f.2/host0/target0:0:0/0:0:0:0/block/sda",
+                                exp_name        => "scsi-0:0:0:0",
+                        }],
                 rules           => <<EOF
 SUBSYSTEMS=="scsi", KERNELS=="*:1", SYMLINK+="no-match"
 SUBSYSTEMS=="scsi", KERNELS=="*:0:1", SYMLINK+="no-match"
@@ -531,8 +692,11 @@ EOF
         },
         {
                 desc            => "KERNELS wildcard partial",
-                devpath         => "/devices/pci0000:00/0000:00:1f.2/host0/target0:0:0/0:0:0:0/block/sda",
-                exp_name        => "scsi-0:0:0:0",
+                devices => [
+                        {
+                                devpath         => "/devices/pci0000:00/0000:00:1f.2/host0/target0:0:0/0:0:0:0/block/sda",
+                                exp_name        => "scsi-0:0:0:0",
+                        }],
                 rules           => <<EOF
 SUBSYSTEMS=="scsi", KERNELS=="0:0:0:0", SYMLINK+="before"
 SUBSYSTEMS=="scsi", KERNELS=="*:0", SYMLINK+="scsi-0:0:0:0"
@@ -540,41 +704,56 @@ EOF
         },
         {
                 desc            => "KERNELS wildcard partial 2",
-                devpath         => "/devices/pci0000:00/0000:00:1f.2/host0/target0:0:0/0:0:0:0/block/sda",
-                exp_name        => "scsi-0:0:0:0",
-                rules           => <<EOF
+                devices => [
+                        {
+                                devpath         => "/devices/pci0000:00/0000:00:1f.2/host0/target0:0:0/0:0:0:0/block/sda",
+                                exp_name        => "scsi-0:0:0:0",
+                        }],
+                rules                => <<EOF
 SUBSYSTEMS=="scsi", KERNELS=="0:0:0:0", SYMLINK+="before"
 SUBSYSTEMS=="scsi", KERNELS=="*:0:0:0", SYMLINK+="scsi-0:0:0:0"
 EOF
         },
         {
                 desc            => "substitute attr with link target value (first match)",
-                devpath         => "/devices/pci0000:00/0000:00:1f.2/host0/target0:0:0/0:0:0:0/block/sda",
-                exp_name        => "driver-is-sd",
+                devices => [
+                        {
+                                devpath         => "/devices/pci0000:00/0000:00:1f.2/host0/target0:0:0/0:0:0:0/block/sda",
+                                exp_name        => "driver-is-sd",
+                        }],
                 rules           => <<EOF
 SUBSYSTEMS=="scsi", SYMLINK+="driver-is-\$attr{driver}"
 EOF
         },
         {
                 desc            => "substitute attr with link target value (currently selected device)",
-                devpath         => "/devices/pci0000:00/0000:00:1f.2/host0/target0:0:0/0:0:0:0/block/sda",
-                exp_name        => "driver-is-ahci",
+                devices => [
+                        {
+                                devpath         => "/devices/pci0000:00/0000:00:1f.2/host0/target0:0:0/0:0:0:0/block/sda",
+                                exp_name        => "driver-is-ahci",
+                        }],
                 rules           => <<EOF
 SUBSYSTEMS=="pci", SYMLINK+="driver-is-\$attr{driver}"
 EOF
         },
         {
                 desc            => "ignore ATTRS attribute whitespace",
-                devpath         => "/devices/pci0000:00/0000:00:1f.2/host0/target0:0:0/0:0:0:0/block/sda",
-                exp_name        => "ignored",
+                devices => [
+                        {
+                                devpath         => "/devices/pci0000:00/0000:00:1f.2/host0/target0:0:0/0:0:0:0/block/sda",
+                                exp_name        => "ignored",
+                        }],
                 rules           => <<EOF
 SUBSYSTEMS=="scsi", ATTRS{whitespace_test}=="WHITE  SPACE", SYMLINK+="ignored"
 EOF
         },
         {
                 desc            => "do not ignore ATTRS attribute whitespace",
-                devpath         => "/devices/pci0000:00/0000:00:1f.2/host0/target0:0:0/0:0:0:0/block/sda",
-                exp_name        => "matched-with-space",
+                devices => [
+                        {
+                                devpath         => "/devices/pci0000:00/0000:00:1f.2/host0/target0:0:0/0:0:0:0/block/sda",
+                                exp_name        => "matched-with-space",
+                        }],
                 rules           => <<EOF
 SUBSYSTEMS=="scsi", ATTRS{whitespace_test}=="WHITE  SPACE ", SYMLINK+="wrong-to-ignore"
 SUBSYSTEMS=="scsi", ATTRS{whitespace_test}=="WHITE  SPACE   ", SYMLINK+="matched-with-space"
@@ -582,117 +761,156 @@ EOF
         },
         {
                 desc            => "permissions USER=bad GROUP=name",
-                devpath         => "/devices/virtual/tty/tty33",
-                exp_name        => "tty33",
-                exp_perms       => "0:0:0600",
+                devices => [
+                        {
+                                devpath         => "/devices/virtual/tty/tty33",
+                                exp_name        => "tty33",
+                                exp_perms       => "0:0:0600",
+                        }],
                 rules           => <<EOF
 KERNEL=="tty33", OWNER="bad", GROUP="name"
 EOF
         },
         {
                 desc            => "permissions OWNER=1",
-                devpath         => "/devices/pci0000:00/0000:00:1f.2/host0/target0:0:0/0:0:0:0/block/sda",
-                exp_name        => "node",
-                exp_perms       => "1::0600",
+                devices => [
+                        {
+                                devpath         => "/devices/pci0000:00/0000:00:1f.2/host0/target0:0:0/0:0:0:0/block/sda",
+                                exp_name        => "node",
+                                exp_perms       => "1::0600",
+                        }],
                 rules           => <<EOF
 SUBSYSTEMS=="scsi", KERNEL=="sda", SYMLINK+="node", OWNER="1"
 EOF
         },
         {
                 desc            => "permissions GROUP=1",
-                devpath         => "/devices/pci0000:00/0000:00:1f.2/host0/target0:0:0/0:0:0:0/block/sda",
-                exp_name        => "node",
-                exp_perms       => ":1:0660",
+                devices => [
+                        {
+                                devpath         => "/devices/pci0000:00/0000:00:1f.2/host0/target0:0:0/0:0:0:0/block/sda",
+                                exp_name        => "node",
+                                exp_perms       => ":1:0660",
+                        }],
                 rules           => <<EOF
 SUBSYSTEMS=="scsi", KERNEL=="sda", SYMLINK+="node", GROUP="1"
 EOF
         },
         {
                 desc            => "textual user id",
-                devpath         => "/devices/pci0000:00/0000:00:1f.2/host0/target0:0:0/0:0:0:0/block/sda",
-                exp_name        => "node",
-                exp_perms       => "daemon::0600",
+                devices => [
+                        {
+                                devpath         => "/devices/pci0000:00/0000:00:1f.2/host0/target0:0:0/0:0:0:0/block/sda",
+                                exp_name        => "node",
+                                exp_perms       => "daemon::0600",
+                        }],
                 rules           => <<EOF
 SUBSYSTEMS=="scsi", KERNEL=="sda", SYMLINK+="node", OWNER="daemon"
 EOF
         },
         {
                 desc            => "textual group id",
-                devpath         => "/devices/pci0000:00/0000:00:1f.2/host0/target0:0:0/0:0:0:0/block/sda",
-                exp_name        => "node",
-                exp_perms       => ":daemon:0660",
+                devices => [
+                        {
+                                devpath         => "/devices/pci0000:00/0000:00:1f.2/host0/target0:0:0/0:0:0:0/block/sda",
+                                exp_name        => "node",
+                                exp_perms       => ":daemon:0660",
+                        }],
                 rules           => <<EOF
 SUBSYSTEMS=="scsi", KERNEL=="sda", SYMLINK+="node", GROUP="daemon"
 EOF
         },
         {
                 desc            => "textual user/group id",
-                devpath         => "/devices/pci0000:00/0000:00:1f.2/host0/target0:0:0/0:0:0:0/block/sda",
-                exp_name        => "node",
-                exp_perms       => "root:audio:0660",
+                devices => [
+                        {
+                                devpath         => "/devices/pci0000:00/0000:00:1f.2/host0/target0:0:0/0:0:0:0/block/sda",
+                                exp_name        => "node",
+                                exp_perms       => "root:audio:0660",
+                        }],
                 rules           => <<EOF
 SUBSYSTEMS=="scsi", KERNEL=="sda", SYMLINK+="node", OWNER="root", GROUP="audio"
 EOF
         },
         {
                 desc            => "permissions MODE=0777",
-                devpath         => "/devices/pci0000:00/0000:00:1f.2/host0/target0:0:0/0:0:0:0/block/sda",
-                exp_name        => "node",
-                exp_perms       => "::0777",
+                devices => [
+                        {
+                                devpath         => "/devices/pci0000:00/0000:00:1f.2/host0/target0:0:0/0:0:0:0/block/sda",
+                                exp_name        => "node",
+                                exp_perms       => "::0777",
+                        }],
                 rules           => <<EOF
 SUBSYSTEMS=="scsi", KERNEL=="sda", SYMLINK+="node", MODE="0777"
 EOF
         },
         {
                 desc            => "permissions OWNER=1 GROUP=1 MODE=0777",
-                devpath         => "/devices/pci0000:00/0000:00:1f.2/host0/target0:0:0/0:0:0:0/block/sda",
-                exp_name        => "node",
-                exp_perms       => "1:1:0777",
+                devices => [
+                        {
+                                devpath         => "/devices/pci0000:00/0000:00:1f.2/host0/target0:0:0/0:0:0:0/block/sda",
+                                exp_name        => "node",
+                                exp_perms       => "1:1:0777",
+                        }],
                 rules           => <<EOF
 SUBSYSTEMS=="scsi", KERNEL=="sda", SYMLINK+="node", OWNER="1", GROUP="1", MODE="0777"
 EOF
         },
         {
                 desc            => "permissions OWNER to 1",
-                devpath         => "/devices/pci0000:00/0000:00:1d.7/usb5/5-2/5-2:1.0/tty/ttyACM0",
-                exp_name        => "ttyACM0",
-                exp_perms       => "1::",
+                devices => [
+                        {
+                                devpath         => "/devices/pci0000:00/0000:00:1d.7/usb5/5-2/5-2:1.0/tty/ttyACM0",
+                                exp_name        => "ttyACM0",
+                                exp_perms       => "1::",
+                        }],
                 rules           => <<EOF
 KERNEL=="ttyACM[0-9]*", SYMLINK+="ttyACM%n", OWNER="1"
 EOF
         },
         {
                 desc            => "permissions GROUP to 1",
-                devpath         => "/devices/pci0000:00/0000:00:1d.7/usb5/5-2/5-2:1.0/tty/ttyACM0",
-                exp_name        => "ttyACM0",
-                exp_perms       => ":1:0660",
+                devices => [
+                        {
+                                devpath         => "/devices/pci0000:00/0000:00:1d.7/usb5/5-2/5-2:1.0/tty/ttyACM0",
+                                exp_name        => "ttyACM0",
+                                exp_perms       => ":1:0660",
+                        }],
                 rules           => <<EOF
 KERNEL=="ttyACM[0-9]*", SYMLINK+="ttyACM%n", GROUP="1"
 EOF
         },
         {
                 desc            => "permissions MODE to 0060",
-                devpath         => "/devices/pci0000:00/0000:00:1d.7/usb5/5-2/5-2:1.0/tty/ttyACM0",
-                exp_name        => "ttyACM0",
-                exp_perms       => "::0060",
+                devices => [
+                        {
+                                devpath         => "/devices/pci0000:00/0000:00:1d.7/usb5/5-2/5-2:1.0/tty/ttyACM0",
+                                exp_name        => "ttyACM0",
+                                exp_perms       => "::0060",
+                        }],
                 rules           => <<EOF
 KERNEL=="ttyACM[0-9]*", SYMLINK+="ttyACM%n", MODE="0060"
 EOF
         },
         {
                 desc            => "permissions OWNER, GROUP, MODE",
-                devpath         => "/devices/pci0000:00/0000:00:1d.7/usb5/5-2/5-2:1.0/tty/ttyACM0",
-                exp_name        => "ttyACM0",
-                exp_perms       => "1:1:0777",
+                devices => [
+                        {
+                                devpath         => "/devices/pci0000:00/0000:00:1d.7/usb5/5-2/5-2:1.0/tty/ttyACM0",
+                                exp_name        => "ttyACM0",
+                                exp_perms       => "1:1:0777",
+                        }],
                 rules           => <<EOF
 KERNEL=="ttyACM[0-9]*", SYMLINK+="ttyACM%n", OWNER="1", GROUP="1", MODE="0777"
 EOF
         },
         {
                 desc            => "permissions only rule",
-                devpath         => "/devices/pci0000:00/0000:00:1d.7/usb5/5-2/5-2:1.0/tty/ttyACM0",
-                exp_name        => "ttyACM0",
-                exp_perms       => "1:1:0777",
+                devices => [
+                        {
+                                devpath         => "/devices/pci0000:00/0000:00:1d.7/usb5/5-2/5-2:1.0/tty/ttyACM0",
+                                exp_name        => "ttyACM0",
+                                exp_perms       => "1:1:0777",
+                        }],
                 rules           => <<EOF
 KERNEL=="ttyACM[0-9]*", OWNER="1", GROUP="1", MODE="0777"
 KERNEL=="ttyUSX[0-9]*", OWNER="2", GROUP="2", MODE="0444"
@@ -701,9 +919,12 @@ EOF
         },
         {
                 desc            => "multiple permissions only rule",
-                devpath         => "/devices/pci0000:00/0000:00:1d.7/usb5/5-2/5-2:1.0/tty/ttyACM0",
-                exp_name        => "ttyACM0",
-                exp_perms       => "1:1:0777",
+                devices => [
+                        {
+                                devpath         => "/devices/pci0000:00/0000:00:1d.7/usb5/5-2/5-2:1.0/tty/ttyACM0",
+                                exp_name        => "ttyACM0",
+                                exp_perms       => "1:1:0777",
+                        }],
                 rules           => <<EOF
 SUBSYSTEM=="tty", OWNER="1"
 SUBSYSTEM=="tty", GROUP="1"
@@ -714,9 +935,12 @@ EOF
         },
         {
                 desc            => "permissions only rule with override at SYMLINK+ rule",
-                devpath         => "/devices/pci0000:00/0000:00:1d.7/usb5/5-2/5-2:1.0/tty/ttyACM0",
-                exp_name        => "ttyACM0",
-                exp_perms       => "1:2:0777",
+                devices => [
+                        {
+                                devpath         => "/devices/pci0000:00/0000:00:1d.7/usb5/5-2/5-2:1.0/tty/ttyACM0",
+                                exp_name        => "ttyACM0",
+                                exp_perms       => "1:2:0777",
+                        }],
                 rules           => <<EOF
 SUBSYSTEM=="tty", OWNER="1"
 SUBSYSTEM=="tty", GROUP="1"
@@ -727,53 +951,71 @@ EOF
         },
         {
                 desc            => "major/minor number test",
-                devpath         => "/devices/pci0000:00/0000:00:1f.2/host0/target0:0:0/0:0:0:0/block/sda",
-                exp_name        => "node",
-                exp_majorminor  => "8:0",
+                devices => [
+                        {
+                                devpath         => "/devices/pci0000:00/0000:00:1f.2/host0/target0:0:0/0:0:0:0/block/sda",
+                                exp_name        => "node",
+                                exp_majorminor  => "8:0",
+                        }],
                 rules           => <<EOF
 SUBSYSTEMS=="scsi", KERNEL=="sda", SYMLINK+="node"
 EOF
         },
         {
                 desc            => "big major number test",
-                devpath         => "/devices/virtual/misc/misc-fake1",
-                exp_name        => "node",
-                exp_majorminor  => "4095:1",
-                rules           => <<EOF
+                devices => [
+                        {
+                                devpath         => "/devices/virtual/misc/misc-fake1",
+                                exp_name        => "node",
+                                exp_majorminor  => "4095:1",
+                        }],
+                rules                => <<EOF
 KERNEL=="misc-fake1", SYMLINK+="node"
 EOF
         },
         {
                 desc            => "big major and big minor number test",
-                devpath         => "/devices/virtual/misc/misc-fake89999",
-                exp_name        => "node",
-                exp_majorminor  => "4095:89999",
+                devices => [
+                        {
+                                devpath         => "/devices/virtual/misc/misc-fake89999",
+                                exp_name        => "node",
+                                exp_majorminor  => "4095:89999",
+                        }],
                 rules           => <<EOF
 KERNEL=="misc-fake89999", SYMLINK+="node"
 EOF
         },
         {
                 desc            => "multiple symlinks with format char",
-                devpath         => "/devices/pci0000:00/0000:00:1d.7/usb5/5-2/5-2:1.0/tty/ttyACM0",
-                exp_name        => "symlink2-ttyACM0",
+                devices => [
+                        {
+                                devpath         => "/devices/pci0000:00/0000:00:1d.7/usb5/5-2/5-2:1.0/tty/ttyACM0",
+                                exp_name        => "symlink2-ttyACM0",
+                        }],
                 rules           => <<EOF
 KERNEL=="ttyACM[0-9]*", SYMLINK="symlink1-%n symlink2-%k symlink3-%b"
 EOF
         },
         {
                 desc            => "multiple symlinks with a lot of s p a c e s",
-                devpath         => "/devices/pci0000:00/0000:00:1d.7/usb5/5-2/5-2:1.0/tty/ttyACM0",
-                exp_name        => "one",
-                not_exp_name    => " ",
+                devices => [
+                        {
+                                devpath         => "/devices/pci0000:00/0000:00:1d.7/usb5/5-2/5-2:1.0/tty/ttyACM0",
+                                exp_name        => "one",
+                                not_exp_name        => " ",
+                        }],
                 rules           => <<EOF
 KERNEL=="ttyACM[0-9]*", SYMLINK="  one     two        "
 EOF
         },
         {
                 desc            => "symlink with spaces in substituted variable",
-                devpath         => "/devices/pci0000:00/0000:00:1d.7/usb5/5-2/5-2:1.0/tty/ttyACM0",
-                exp_name        => "name-one_two_three-end",
-                not_exp_name    => " ",
+                devices => [
+                        {
+                                devpath         => "/devices/pci0000:00/0000:00:1d.7/usb5/5-2/5-2:1.0/tty/ttyACM0",
+                                exp_name        => "name-one_two_three-end",
+                                not_exp_name    => " ",
+                        }],
                 rules           => <<EOF
 ENV{WITH_WS}="one two three"
 SYMLINK="name-\$env{WITH_WS}-end"
@@ -781,9 +1023,12 @@ EOF
         },
         {
                 desc            => "symlink with leading space in substituted variable",
-                devpath         => "/devices/pci0000:00/0000:00:1d.7/usb5/5-2/5-2:1.0/tty/ttyACM0",
-                exp_name        => "name-one_two_three-end",
-                not_exp_name    => " ",
+                devices => [
+                        {
+                                devpath         => "/devices/pci0000:00/0000:00:1d.7/usb5/5-2/5-2:1.0/tty/ttyACM0",
+                                exp_name        => "name-one_two_three-end",
+                                not_exp_name    => " ",
+                        }],
                 rules           => <<EOF
 ENV{WITH_WS}="   one two three"
 SYMLINK="name-\$env{WITH_WS}-end"
@@ -791,9 +1036,12 @@ EOF
         },
         {
                 desc            => "symlink with trailing space in substituted variable",
-                devpath         => "/devices/pci0000:00/0000:00:1d.7/usb5/5-2/5-2:1.0/tty/ttyACM0",
-                exp_name        => "name-one_two_three-end",
-                not_exp_name    => " ",
+                devices => [
+                        {
+                                devpath         => "/devices/pci0000:00/0000:00:1d.7/usb5/5-2/5-2:1.0/tty/ttyACM0",
+                                exp_name        => "name-one_two_three-end",
+                                not_exp_name    => " ",
+                        }],
                 rules           => <<EOF
 ENV{WITH_WS}="one two three   "
 SYMLINK="name-\$env{WITH_WS}-end"
@@ -801,9 +1049,12 @@ EOF
         },
         {
                 desc            => "symlink with lots of space in substituted variable",
-                devpath         => "/devices/pci0000:00/0000:00:1d.7/usb5/5-2/5-2:1.0/tty/ttyACM0",
-                exp_name        => "name-one_two_three-end",
-                not_exp_name    => " ",
+                devices => [
+                        {
+                                devpath         => "/devices/pci0000:00/0000:00:1d.7/usb5/5-2/5-2:1.0/tty/ttyACM0",
+                                exp_name        => "name-one_two_three-end",
+                                not_exp_name    => " ",
+                        }],
                 rules           => <<EOF
 ENV{WITH_WS}="   one two three   "
 SYMLINK="name-\$env{WITH_WS}-end"
@@ -811,9 +1062,12 @@ EOF
         },
         {
                 desc            => "symlink with multiple spaces in substituted variable",
-                devpath         => "/devices/pci0000:00/0000:00:1d.7/usb5/5-2/5-2:1.0/tty/ttyACM0",
-                exp_name        => "name-one_two_three-end",
-                not_exp_name    => " ",
+                devices => [
+                        {
+                                devpath         => "/devices/pci0000:00/0000:00:1d.7/usb5/5-2/5-2:1.0/tty/ttyACM0",
+                                exp_name        => "name-one_two_three-end",
+                                not_exp_name    => " ",
+                        }],
                 rules           => <<EOF
 ENV{WITH_WS}="   one  two  three   "
 SYMLINK="name-\$env{WITH_WS}-end"
@@ -821,9 +1075,12 @@ EOF
         },
         {
                 desc            => "symlink with space and var with space, part 1",
-                devpath         => "/devices/pci0000:00/0000:00:1d.7/usb5/5-2/5-2:1.0/tty/ttyACM0",
-                exp_name        => "first",
-                not_exp_name    => " ",
+                devices => [
+                        {
+                                devpath         => "/devices/pci0000:00/0000:00:1d.7/usb5/5-2/5-2:1.0/tty/ttyACM0",
+                                exp_name        => "first",
+                                not_exp_name    => " ",
+                        }],
                 rules           => <<EOF
 ENV{WITH_WS}="   one  two  three   "
 SYMLINK="  first  name-\$env{WITH_WS}-end another_symlink a b c "
@@ -831,9 +1088,12 @@ EOF
         },
         {
                 desc            => "symlink with space and var with space, part 2",
-                devpath         => "/devices/pci0000:00/0000:00:1d.7/usb5/5-2/5-2:1.0/tty/ttyACM0",
-                exp_name        => "name-one_two_three-end",
-                not_exp_name    => " ",
+                devices => [
+                        {
+                                devpath         => "/devices/pci0000:00/0000:00:1d.7/usb5/5-2/5-2:1.0/tty/ttyACM0",
+                                exp_name        => "name-one_two_three-end",
+                                not_exp_name    => " ",
+                        }],
                 rules           => <<EOF
 ENV{WITH_WS}="   one  two  three   "
 SYMLINK="  first  name-\$env{WITH_WS}-end another_symlink a b c "
@@ -841,9 +1101,12 @@ EOF
         },
         {
                 desc            => "symlink with space and var with space, part 3",
-                devpath         => "/devices/pci0000:00/0000:00:1d.7/usb5/5-2/5-2:1.0/tty/ttyACM0",
-                exp_name        => "another_symlink",
-                not_exp_name    => " ",
+                devices => [
+                        {
+                                devpath         => "/devices/pci0000:00/0000:00:1d.7/usb5/5-2/5-2:1.0/tty/ttyACM0",
+                                exp_name        => "another_symlink",
+                                not_exp_name    => " ",
+                        }],
                 rules           => <<EOF
 ENV{WITH_WS}="   one  two  three   "
 SYMLINK="  first  name-\$env{WITH_WS}-end another_symlink a b c "
@@ -851,133 +1114,181 @@ EOF
         },
         {
                 desc            => "symlink creation (same directory)",
-                devpath         => "/devices/pci0000:00/0000:00:1d.7/usb5/5-2/5-2:1.0/tty/ttyACM0",
-                exp_name        => "modem0",
+                devices => [
+                        {
+                                devpath         => "/devices/pci0000:00/0000:00:1d.7/usb5/5-2/5-2:1.0/tty/ttyACM0",
+                                exp_name        => "modem0",
+                        }],
                 rules           => <<EOF
 KERNEL=="ttyACM[0-9]*", SYMLINK+="ttyACM%n", SYMLINK="modem%n"
 EOF
         },
         {
                 desc            => "multiple symlinks",
-                devpath         => "/devices/pci0000:00/0000:00:1d.7/usb5/5-2/5-2:1.0/tty/ttyACM0",
-                exp_name        => "second-0",
+                devices => [
+                        {
+                                devpath         => "/devices/pci0000:00/0000:00:1d.7/usb5/5-2/5-2:1.0/tty/ttyACM0",
+                                exp_name        => "second-0" ,
+                        }],
                 rules           => <<EOF
 KERNEL=="ttyACM0", SYMLINK="first-%n second-%n third-%n"
 EOF
         },
         {
                 desc            => "symlink name '.'",
-                devpath         => "/devices/pci0000:00/0000:00:1f.2/host0/target0:0:0/0:0:0:0/block/sda",
-                exp_name        => ".",
-                exp_add_error   => "yes",
-                exp_rem_error   => "yes",
+                devices => [
+                        {
+                                devpath         => "/devices/pci0000:00/0000:00:1f.2/host0/target0:0:0/0:0:0:0/block/sda",
+                                exp_name        => ".",
+                                exp_add_error        => "yes",
+                                exp_rem_error        => "yes",
+                        }],
                 rules           => <<EOF
 SUBSYSTEMS=="scsi", KERNEL=="sda", SYMLINK+="."
 EOF
         },
         {
                 desc            => "symlink node to itself",
-                devpath         => "/devices/virtual/tty/tty0",
-                exp_name        => "link",
-                exp_add_error   => "yes",
-                exp_rem_error   => "yes",
-                option          => "clean",
+                devices => [
+                        {
+                                devpath         => "/devices/virtual/tty/tty0",
+                                exp_name        => "link",
+                                exp_add_error        => "yes",
+                                exp_rem_error        => "yes",
+                        }],
+                option                => "clean",
                 rules           => <<EOF
 KERNEL=="tty0", SYMLINK+="tty0"
 EOF
         },
         {
                 desc            => "symlink %n substitution",
-                devpath         => "/devices/pci0000:00/0000:00:1d.7/usb5/5-2/5-2:1.0/tty/ttyACM0",
-                exp_name        => "symlink0",
+                devices => [
+                        {
+                                devpath         => "/devices/pci0000:00/0000:00:1d.7/usb5/5-2/5-2:1.0/tty/ttyACM0",
+                                exp_name        => "symlink0",
+                        }],
                 rules           => <<EOF
 KERNEL=="ttyACM[0-9]*", SYMLINK+="ttyACM%n", SYMLINK+="symlink%n"
 EOF
         },
         {
                 desc            => "symlink %k substitution",
-                devpath         => "/devices/pci0000:00/0000:00:1d.7/usb5/5-2/5-2:1.0/tty/ttyACM0",
-                exp_name        => "symlink-ttyACM0",
+                devices => [
+                        {
+                                devpath         => "/devices/pci0000:00/0000:00:1d.7/usb5/5-2/5-2:1.0/tty/ttyACM0",
+                                exp_name        => "symlink-ttyACM0",
+                        }],
                 rules           => <<EOF
 KERNEL=="ttyACM[0-9]*", SYMLINK+="ttyACM%n", SYMLINK+="symlink-%k"
 EOF
         },
         {
                 desc            => "symlink %M:%m substitution",
-                devpath         => "/devices/pci0000:00/0000:00:1d.7/usb5/5-2/5-2:1.0/tty/ttyACM0",
-                exp_name        => "major-166:0",
+                devices => [
+                        {
+                                devpath         => "/devices/pci0000:00/0000:00:1d.7/usb5/5-2/5-2:1.0/tty/ttyACM0",
+                                exp_name        => "major-166:0",
+                        }],
                 rules           => <<EOF
 KERNEL=="ttyACM[0-9]*", SYMLINK+="ttyACM%n", SYMLINK+="major-%M:%m"
 EOF
         },
         {
                 desc            => "symlink %b substitution",
-                devpath         => "/devices/pci0000:00/0000:00:1f.2/host0/target0:0:0/0:0:0:0/block/sda",
-                exp_name        => "symlink-0:0:0:0",
+                devices => [
+                        {
+                                devpath         => "/devices/pci0000:00/0000:00:1f.2/host0/target0:0:0/0:0:0:0/block/sda",
+                                exp_name        => "symlink-0:0:0:0",
+                        }],
                 rules           => <<EOF
 SUBSYSTEMS=="scsi", KERNEL=="sda", SYMLINK+="symlink-%b"
 EOF
         },
         {
                 desc            => "symlink %c substitution",
-                devpath         => "/devices/pci0000:00/0000:00:1d.7/usb5/5-2/5-2:1.0/tty/ttyACM0",
-                exp_name        => "test",
+                devices => [
+                        {
+                                devpath         => "/devices/pci0000:00/0000:00:1d.7/usb5/5-2/5-2:1.0/tty/ttyACM0",
+                                exp_name        => "test",
+                        }],
                 rules           => <<EOF
 KERNEL=="ttyACM[0-9]*", PROGRAM=="/bin/echo test", SYMLINK+="%c"
 EOF
         },
         {
                 desc            => "symlink %c{N} substitution",
-                devpath         => "/devices/pci0000:00/0000:00:1d.7/usb5/5-2/5-2:1.0/tty/ttyACM0",
-                exp_name        => "test",
+                devices => [
+                        {
+                                devpath         => "/devices/pci0000:00/0000:00:1d.7/usb5/5-2/5-2:1.0/tty/ttyACM0",
+                                exp_name        => "test",
+                        }],
                 rules           => <<EOF
 KERNEL=="ttyACM[0-9]*", PROGRAM=="/bin/echo symlink test this", SYMLINK+="%c{2}"
 EOF
         },
         {
                 desc            => "symlink %c{N+} substitution",
-                devpath         => "/devices/pci0000:00/0000:00:1d.7/usb5/5-2/5-2:1.0/tty/ttyACM0",
-                exp_name        => "this",
+                devices => [
+                        {
+                                devpath         => "/devices/pci0000:00/0000:00:1d.7/usb5/5-2/5-2:1.0/tty/ttyACM0",
+                                exp_name        => "this",
+                        }],
                 rules           => <<EOF
 KERNEL=="ttyACM[0-9]*", PROGRAM=="/bin/echo symlink test this", SYMLINK+="%c{2+}"
 EOF
         },
         {
                 desc            => "symlink only rule with %c{N+}",
-                devpath         => "/devices/pci0000:00/0000:00:1f.2/host0/target0:0:0/0:0:0:0/block/sda",
-                exp_name        => "test",
+                devices => [
+                        {
+                                devpath         => "/devices/pci0000:00/0000:00:1f.2/host0/target0:0:0/0:0:0:0/block/sda",
+                                exp_name        => "test",
+                        }],
                 rules           => <<EOF
 SUBSYSTEMS=="scsi", KERNEL=="sda", PROGRAM=="/bin/echo link test this" SYMLINK+="%c{2+}"
 EOF
         },
         {
                 desc            => "symlink %s{filename} substitution",
-                devpath         => "/devices/pci0000:00/0000:00:1d.7/usb5/5-2/5-2:1.0/tty/ttyACM0",
-                exp_name        => "166:0",
+                devices => [
+                        {
+                                devpath         => "/devices/pci0000:00/0000:00:1d.7/usb5/5-2/5-2:1.0/tty/ttyACM0",
+                                exp_name        => "166:0",
+                        }],
                 rules           => <<EOF
 KERNEL=="ttyACM[0-9]*", SYMLINK+="%s{dev}"
 EOF
         },
         {
                 desc            => "program result substitution (numbered part of)",
-                devpath         => "/devices/pci0000:00/0000:00:1f.2/host0/target0:0:0/0:0:0:0/block/sda/sda5",
-                exp_name        => "link1",
+                devices => [
+                        {
+                                devpath         => "/devices/pci0000:00/0000:00:1f.2/host0/target0:0:0/0:0:0:0/block/sda/sda5",
+                                exp_name        => "link1",
+                        }],
                 rules           => <<EOF
 SUBSYSTEMS=="scsi", PROGRAM=="/bin/echo -n node link1 link2", RESULT=="node *", SYMLINK+="%c{2} %c{3}"
 EOF
         },
         {
                 desc            => "program result substitution (numbered part of+)",
-                devpath         => "/devices/pci0000:00/0000:00:1f.2/host0/target0:0:0/0:0:0:0/block/sda/sda5",
-                exp_name        => "link4",
+                devices => [
+                        {
+                                devpath         => "/devices/pci0000:00/0000:00:1f.2/host0/target0:0:0/0:0:0:0/block/sda/sda5",
+                                exp_name        => "link4",
+                        }],
                 rules           => <<EOF
 SUBSYSTEMS=="scsi", PROGRAM=="/bin/echo -n node link1 link2 link3 link4", RESULT=="node *", SYMLINK+="%c{2+}"
 EOF
         },
         {
                 desc            => "SUBSYSTEM match test",
-                devpath         => "/devices/pci0000:00/0000:00:1f.2/host0/target0:0:0/0:0:0:0/block/sda",
-                exp_name        => "node",
+                devices => [
+                        {
+                                devpath         => "/devices/pci0000:00/0000:00:1f.2/host0/target0:0:0/0:0:0:0/block/sda",
+                                exp_name        => "node",
+                        }],
                 rules           => <<EOF
 SUBSYSTEMS=="scsi", KERNEL=="sda", SYMLINK+="should_not_match", SUBSYSTEM=="vc"
 SUBSYSTEMS=="scsi", KERNEL=="sda", SYMLINK+="node", SUBSYSTEM=="block"
@@ -986,8 +1297,11 @@ EOF
         },
         {
                 desc            => "DRIVERS match test",
-                devpath         => "/devices/pci0000:00/0000:00:1f.2/host0/target0:0:0/0:0:0:0/block/sda",
-                exp_name        => "node",
+                devices => [
+                        {
+                                devpath         => "/devices/pci0000:00/0000:00:1f.2/host0/target0:0:0/0:0:0:0/block/sda",
+                                exp_name        => "node",
+                        }],
                 rules           => <<EOF
 SUBSYSTEMS=="scsi", KERNEL=="sda", SYMLINK+="should_not_match", DRIVERS=="sd-wrong"
 SUBSYSTEMS=="scsi", KERNEL=="sda", SYMLINK+="node", DRIVERS=="sd"
@@ -995,32 +1309,44 @@ EOF
         },
         {
                 desc            => "devnode substitution test",
-                devpath         => "/devices/pci0000:00/0000:00:1f.2/host0/target0:0:0/0:0:0:0/block/sda",
-                exp_name        => "node",
+                devices => [
+                        {
+                                devpath         => "/devices/pci0000:00/0000:00:1f.2/host0/target0:0:0/0:0:0:0/block/sda",
+                                exp_name        => "node",
+                        }],
                 rules           => <<EOF
 SUBSYSTEMS=="scsi", KERNEL=="sda", PROGRAM=="/usr/bin/test -b %N" SYMLINK+="node"
 EOF
         },
         {
                 desc            => "parent node name substitution test",
-                devpath         => "/devices/pci0000:00/0000:00:1f.2/host0/target0:0:0/0:0:0:0/block/sda/sda1",
-                exp_name        => "sda-part-1",
+                devices => [
+                        {
+                                devpath         => "/devices/pci0000:00/0000:00:1f.2/host0/target0:0:0/0:0:0:0/block/sda/sda1",
+                                exp_name        => "sda-part-1",
+                        }],
                 rules           => <<EOF
 SUBSYSTEMS=="scsi", KERNEL=="sda1", SYMLINK+="%P-part-1"
 EOF
         },
         {
                 desc            => "udev_root substitution",
-                devpath         => "/devices/pci0000:00/0000:00:1f.2/host0/target0:0:0/0:0:0:0/block/sda/sda1",
-                exp_name        => "start-/dev-end",
+                devices => [
+                        {
+                                devpath         => "/devices/pci0000:00/0000:00:1f.2/host0/target0:0:0/0:0:0:0/block/sda/sda1",
+                                exp_name        => "start-/dev-end",
+                        }],
                 rules           => <<EOF
 SUBSYSTEMS=="scsi", KERNEL=="sda1", SYMLINK+="start-%r-end"
 EOF
         },
         {
                 desc            => "last_rule option",
-                devpath         => "/devices/pci0000:00/0000:00:1f.2/host0/target0:0:0/0:0:0:0/block/sda/sda1",
-                exp_name        => "last",
+                devices => [
+                        {
+                                devpath         => "/devices/pci0000:00/0000:00:1f.2/host0/target0:0:0/0:0:0:0/block/sda/sda1",
+                                exp_name        => "last",
+                        }],
                 rules           => <<EOF
 SUBSYSTEMS=="scsi", KERNEL=="sda1", SYMLINK+="last", OPTIONS="last_rule"
 SUBSYSTEMS=="scsi", KERNEL=="sda1", SYMLINK+="very-last"
@@ -1028,8 +1354,11 @@ EOF
         },
         {
                 desc            => "negation KERNEL!=",
-                devpath         => "/devices/pci0000:00/0000:00:1f.2/host0/target0:0:0/0:0:0:0/block/sda/sda1",
-                exp_name        => "match",
+                devices => [
+                        {
+                                devpath         => "/devices/pci0000:00/0000:00:1f.2/host0/target0:0:0/0:0:0:0/block/sda/sda1",
+                                exp_name        => "match",
+                        }],
                 rules           => <<EOF
 SUBSYSTEMS=="scsi", KERNEL!="sda1", SYMLINK+="matches-but-is-negated"
 SUBSYSTEMS=="scsi", KERNEL=="sda1", SYMLINK+="before"
@@ -1038,8 +1367,11 @@ EOF
         },
         {
                 desc            => "negation SUBSYSTEM!=",
-                devpath         => "/devices/pci0000:00/0000:00:1f.2/host0/target0:0:0/0:0:0:0/block/sda/sda1",
-                exp_name        => "not-anything",
+                devices => [
+                        {
+                                devpath         => "/devices/pci0000:00/0000:00:1f.2/host0/target0:0:0/0:0:0:0/block/sda/sda1",
+                                exp_name        => "not-anything",
+                        }],
                 rules           => <<EOF
 SUBSYSTEMS=="scsi", SUBSYSTEM=="block", KERNEL!="sda1", SYMLINK+="matches-but-is-negated"
 SUBSYSTEMS=="scsi", KERNEL=="sda1", SYMLINK+="before"
@@ -1048,8 +1380,11 @@ EOF
         },
         {
                 desc            => "negation PROGRAM!= exit code",
-                devpath         => "/devices/pci0000:00/0000:00:1f.2/host0/target0:0:0/0:0:0:0/block/sda/sda1",
-                exp_name        => "nonzero-program",
+                devices => [
+                        {
+                                devpath         => "/devices/pci0000:00/0000:00:1f.2/host0/target0:0:0/0:0:0:0/block/sda/sda1",
+                                exp_name        => "nonzero-program",
+                        }],
                 rules           => <<EOF
 SUBSYSTEMS=="scsi", KERNEL=="sda1", SYMLINK+="before"
 KERNEL=="sda1", PROGRAM!="/bin/false", SYMLINK+="nonzero-program"
@@ -1057,8 +1392,11 @@ EOF
         },
         {
                 desc            => "ENV{} test",
-                devpath         => "/devices/pci0000:00/0000:00:1f.2/host0/target0:0:0/0:0:0:0/block/sda/sda1",
-                exp_name        => "true",
+                devices => [
+                        {
+                                devpath         => "/devices/pci0000:00/0000:00:1f.2/host0/target0:0:0/0:0:0:0/block/sda/sda1",
+                                exp_name        => "true",
+                        }],
                 rules           => <<EOF
 ENV{ENV_KEY_TEST}="test"
 SUBSYSTEMS=="scsi", KERNEL=="sda1", ENV{ENV_KEY_TEST}=="go", SYMLINK+="wrong"
@@ -1068,8 +1406,11 @@ EOF
         },
         {
                 desc            => "ENV{} test",
-                devpath         => "/devices/pci0000:00/0000:00:1f.2/host0/target0:0:0/0:0:0:0/block/sda/sda1",
-                exp_name        => "true",
+                devices => [
+                        {
+                                devpath         => "/devices/pci0000:00/0000:00:1f.2/host0/target0:0:0/0:0:0:0/block/sda/sda1",
+                                exp_name        => "true",
+                        }],
                 rules           => <<EOF
 ENV{ENV_KEY_TEST}="test"
 SUBSYSTEMS=="scsi", KERNEL=="sda1", ENV{ENV_KEY_TEST}=="go", SYMLINK+="wrong"
@@ -1080,8 +1421,11 @@ EOF
         },
         {
                 desc            => "ENV{} test (assign)",
-                devpath         => "/devices/pci0000:00/0000:00:1f.2/host0/target0:0:0/0:0:0:0/block/sda/sda1",
-                exp_name        => "true",
+                devices => [
+                        {
+                                devpath         => "/devices/pci0000:00/0000:00:1f.2/host0/target0:0:0/0:0:0:0/block/sda/sda1",
+                                exp_name        => "true",
+                        }],
                 rules           => <<EOF
 SUBSYSTEMS=="scsi", KERNEL=="sda1", ENV{ASSIGN}="true"
 SUBSYSTEMS=="scsi", KERNEL=="sda1", ENV{ASSIGN}=="yes", SYMLINK+="no"
@@ -1091,8 +1435,11 @@ EOF
         },
         {
                 desc            => "ENV{} test (assign 2 times)",
-                devpath         => "/devices/pci0000:00/0000:00:1f.2/host0/target0:0:0/0:0:0:0/block/sda/sda1",
-                exp_name        => "true",
+                devices => [
+                        {
+                                devpath         => "/devices/pci0000:00/0000:00:1f.2/host0/target0:0:0/0:0:0:0/block/sda/sda1",
+                                exp_name        => "true",
+                        }],
                 rules           => <<EOF
 SUBSYSTEMS=="scsi", KERNEL=="sda1", ENV{ASSIGN}="true"
 SUBSYSTEMS=="scsi", KERNEL=="sda1", ENV{ASSIGN}="absolutely-\$env{ASSIGN}"
@@ -1103,8 +1450,11 @@ EOF
         },
         {
                 desc            => "ENV{} test (assign2)",
-                devpath         => "/devices/pci0000:00/0000:00:1f.2/host0/target0:0:0/0:0:0:0/block/sda/sda1",
-                exp_name        => "part",
+                devices => [
+                        {
+                                devpath         => "/devices/pci0000:00/0000:00:1f.2/host0/target0:0:0/0:0:0:0/block/sda/sda1",
+                                exp_name        => "part",
+                        }],
                 rules           => <<EOF
 SUBSYSTEM=="block", KERNEL=="*[0-9]", ENV{PARTITION}="true", ENV{MAINDEVICE}="false"
 SUBSYSTEM=="block", KERNEL=="*[!0-9]", ENV{PARTITION}="false", ENV{MAINDEVICE}="true"
@@ -1115,40 +1465,55 @@ EOF
         },
         {
                 desc            => "untrusted string sanitize",
-                devpath         => "/devices/pci0000:00/0000:00:1f.2/host0/target0:0:0/0:0:0:0/block/sda/sda1",
-                exp_name        => "sane",
+                devices => [
+                        {
+                                devpath         => "/devices/pci0000:00/0000:00:1f.2/host0/target0:0:0/0:0:0:0/block/sda/sda1",
+                                exp_name        => "sane",
+                        }],
                 rules           => <<EOF
 SUBSYSTEMS=="scsi", KERNEL=="sda1", PROGRAM=="/bin/echo -e name; (/usr/bin/badprogram)", RESULT=="name_ _/usr/bin/badprogram_", SYMLINK+="sane"
 EOF
         },
         {
                 desc            => "untrusted string sanitize (don't replace utf8)",
-                devpath         => "/devices/pci0000:00/0000:00:1f.2/host0/target0:0:0/0:0:0:0/block/sda/sda1",
-                exp_name        => "uber",
+                devices => [
+                        {
+                                devpath         => "/devices/pci0000:00/0000:00:1f.2/host0/target0:0:0/0:0:0:0/block/sda/sda1",
+                                exp_name        => "uber",
+                        }],
                 rules           => <<EOF
 SUBSYSTEMS=="scsi", KERNEL=="sda1", PROGRAM=="/bin/echo -e \\xc3\\xbcber" RESULT=="\xc3\xbcber", SYMLINK+="uber"
 EOF
         },
         {
                 desc            => "untrusted string sanitize (replace invalid utf8)",
-                devpath         => "/devices/pci0000:00/0000:00:1f.2/host0/target0:0:0/0:0:0:0/block/sda/sda1",
-                exp_name        => "replaced",
+                devices => [
+                        {
+                                devpath         => "/devices/pci0000:00/0000:00:1f.2/host0/target0:0:0/0:0:0:0/block/sda/sda1",
+                                exp_name        => "replaced",
+                        }],
                 rules           => <<EOF
 SUBSYSTEMS=="scsi", KERNEL=="sda1", PROGRAM=="/bin/echo -e \\xef\\xe8garbage", RESULT=="__garbage", SYMLINK+="replaced"
 EOF
         },
         {
                 desc            => "read sysfs value from parent device",
-                devpath         => "/devices/pci0000:00/0000:00:1d.7/usb5/5-2/5-2:1.0/tty/ttyACM0",
-                exp_name        => "serial-354172020305000",
+                devices => [
+                        {
+                                devpath         => "/devices/pci0000:00/0000:00:1d.7/usb5/5-2/5-2:1.0/tty/ttyACM0",
+                                exp_name        => "serial-354172020305000",
+                        }],
                 rules           => <<EOF
 KERNEL=="ttyACM*", ATTRS{serial}=="?*", SYMLINK+="serial-%s{serial}"
 EOF
         },
         {
                 desc            => "match against empty key string",
-                devpath         => "/devices/pci0000:00/0000:00:1f.2/host0/target0:0:0/0:0:0:0/block/sda",
-                exp_name        => "ok",
+                devices => [
+                        {
+                                devpath         => "/devices/pci0000:00/0000:00:1f.2/host0/target0:0:0/0:0:0:0/block/sda",
+                                exp_name        => "ok",
+                        }],
                 rules           => <<EOF
 KERNEL=="sda", ATTRS{nothing}!="", SYMLINK+="not-1-ok"
 KERNEL=="sda", ATTRS{nothing}=="", SYMLINK+="not-2-ok"
@@ -1158,8 +1523,11 @@ EOF
         },
         {
                 desc            => "check ACTION value",
-                devpath         => "/devices/pci0000:00/0000:00:1f.2/host0/target0:0:0/0:0:0:0/block/sda",
-                exp_name        => "ok",
+                devices => [
+                        {
+                                devpath         => "/devices/pci0000:00/0000:00:1f.2/host0/target0:0:0/0:0:0:0/block/sda",
+                                exp_name        => "ok",
+                        }],
                 rules           => <<EOF
 ACTION=="unknown", KERNEL=="sda", SYMLINK+="unknown-not-ok"
 ACTION=="add", KERNEL=="sda", SYMLINK+="ok"
@@ -1167,9 +1535,12 @@ EOF
         },
         {
                 desc            => "final assignment",
-                devpath         => "/devices/pci0000:00/0000:00:1f.2/host0/target0:0:0/0:0:0:0/block/sda",
-                exp_name        => "ok",
-                exp_perms       => "root:tty:0640",
+                devices => [
+                        {
+                                devpath         => "/devices/pci0000:00/0000:00:1f.2/host0/target0:0:0/0:0:0:0/block/sda",
+                                exp_name        => "ok",
+                                exp_perms       => "root:tty:0640",
+                        }],
                 rules           => <<EOF
 KERNEL=="sda", GROUP:="tty"
 KERNEL=="sda", GROUP="not-ok", MODE="0640", SYMLINK+="ok"
@@ -1177,9 +1548,12 @@ EOF
         },
         {
                 desc            => "final assignment 2",
-                devpath         => "/devices/pci0000:00/0000:00:1f.2/host0/target0:0:0/0:0:0:0/block/sda",
-                exp_name        => "ok",
-                exp_perms       => "root:tty:0640",
+                devices => [
+                        {
+                                devpath         => "/devices/pci0000:00/0000:00:1f.2/host0/target0:0:0/0:0:0:0/block/sda",
+                                exp_name        => "ok",
+                                exp_perms       => "root:tty:0640",
+                        }],
                 rules           => <<EOF
 KERNEL=="sda", GROUP:="tty"
 SUBSYSTEM=="block", MODE:="640"
@@ -1188,17 +1562,23 @@ EOF
         },
         {
                 desc            => "env substitution",
-                devpath         => "/devices/pci0000:00/0000:00:1f.2/host0/target0:0:0/0:0:0:0/block/sda",
-                exp_name        => "node-add-me",
+                devices => [
+                        {
+                                devpath         => "/devices/pci0000:00/0000:00:1f.2/host0/target0:0:0/0:0:0:0/block/sda",
+                                exp_name        => "node-add-me",
+                        }],
                 rules           => <<EOF
 KERNEL=="sda", MODE="0666", SYMLINK+="node-\$env{ACTION}-me"
 EOF
         },
         {
                 desc            => "reset list to current value",
-                devpath         => "/devices/pci0000:00/0000:00:1d.7/usb5/5-2/5-2:1.0/tty/ttyACM0",
-                exp_name        => "three",
-                not_exp_name    => "two",
+                devices => [
+                        {
+                                devpath         => "/devices/pci0000:00/0000:00:1d.7/usb5/5-2/5-2:1.0/tty/ttyACM0",
+                                exp_name        => "three",
+                                not_exp_name    => "two",
+                        }],
                 rules           => <<EOF
 KERNEL=="ttyACM[0-9]*", SYMLINK+="one"
 KERNEL=="ttyACM[0-9]*", SYMLINK+="two"
@@ -1207,9 +1587,12 @@ EOF
         },
         {
                 desc            => "test empty SYMLINK+ (empty override)",
-                devpath         => "/devices/pci0000:00/0000:00:1d.7/usb5/5-2/5-2:1.0/tty/ttyACM0",
-                exp_name        => "right",
-                not_exp_name    => "wrong",
+                devices => [
+                        {
+                                devpath         => "/devices/pci0000:00/0000:00:1d.7/usb5/5-2/5-2:1.0/tty/ttyACM0",
+                                exp_name        => "right",
+                                not_exp_name    => "wrong",
+                        }],
                 rules           => <<EOF
 KERNEL=="ttyACM[0-9]*", SYMLINK+="wrong"
 KERNEL=="ttyACM[0-9]*", SYMLINK=""
@@ -1218,8 +1601,11 @@ EOF
         },
         {
                 desc            => "test multi matches",
-                devpath         => "/devices/pci0000:00/0000:00:1d.7/usb5/5-2/5-2:1.0/tty/ttyACM0",
-                exp_name        => "right",
+                devices => [
+                        {
+                                devpath         => "/devices/pci0000:00/0000:00:1d.7/usb5/5-2/5-2:1.0/tty/ttyACM0",
+                                exp_name        => "right",
+                        }],
                 rules           => <<EOF
 KERNEL=="ttyACM*", SYMLINK+="before"
 KERNEL=="ttyACM*|nothing", SYMLINK+="right"
@@ -1227,8 +1613,11 @@ EOF
         },
         {
                 desc            => "test multi matches 2",
-                devpath         => "/devices/pci0000:00/0000:00:1d.7/usb5/5-2/5-2:1.0/tty/ttyACM0",
-                exp_name        => "right",
+                devices => [
+                        {
+                                devpath         => "/devices/pci0000:00/0000:00:1d.7/usb5/5-2/5-2:1.0/tty/ttyACM0",
+                                exp_name        => "right",
+                        }],
                 rules           => <<EOF
 KERNEL=="dontknow*|*nothing", SYMLINK+="nomatch"
 KERNEL=="ttyACM*", SYMLINK+="before"
@@ -1237,8 +1626,11 @@ EOF
         },
         {
                 desc            => "test multi matches 3",
-                devpath         => "/devices/pci0000:00/0000:00:1d.7/usb5/5-2/5-2:1.0/tty/ttyACM0",
-                exp_name        => "right",
+                devices => [
+                        {
+                                devpath         => "/devices/pci0000:00/0000:00:1d.7/usb5/5-2/5-2:1.0/tty/ttyACM0",
+                                exp_name        => "right",
+                        }],
                 rules           => <<EOF
 KERNEL=="dontknow|nothing", SYMLINK+="nomatch"
 KERNEL=="dontknow|ttyACM0a|nothing|attyACM0", SYMLINK+="wrong1"
@@ -1248,8 +1640,11 @@ EOF
         },
         {
                 desc            => "test multi matches 4",
-                devpath         => "/devices/pci0000:00/0000:00:1d.7/usb5/5-2/5-2:1.0/tty/ttyACM0",
-                exp_name        => "right",
+                devices => [
+                        {
+                                devpath         => "/devices/pci0000:00/0000:00:1d.7/usb5/5-2/5-2:1.0/tty/ttyACM0",
+                                exp_name        => "right",
+                        }],
                 rules           => <<EOF
 KERNEL=="dontknow|nothing", SYMLINK+="nomatch"
 KERNEL=="dontknow|ttyACM0a|nothing|attyACM0", SYMLINK+="wrong1"
@@ -1259,10 +1654,13 @@ KERNEL=="ttyACM0a|nothing", SYMLINK+="wrong3"
 EOF
         },
         {
-                desc            => "test multi matches 5",
-                devpath         => "/devices/pci0000:00/0000:00:1f.2/host0/target0:0:0/0:0:0:0/block/sda",
-                exp_name        => "found",
-                not_exp_name    => "bad",
+               desc            => "test multi matches 5",
+               devices => [
+                       {
+                               devpath         => "/devices/pci0000:00/0000:00:1f.2/host0/target0:0:0/0:0:0:0/block/sda",
+                               exp_name        => "found",
+                               not_exp_name    => "bad",
+                       }],
                 rules           => <<EOF
 KERNEL=="sda", TAG="foo"
 TAGS=="|foo", SYMLINK+="found"
@@ -1271,9 +1669,12 @@ EOF
         },
         {
                 desc            => "test multi matches 6",
-                devpath         => "/devices/pci0000:00/0000:00:1f.2/host0/target0:0:0/0:0:0:0/block/sda",
-                exp_name        => "found",
-                not_exp_name    => "bad",
+                devices => [
+                        {
+                                devpath         => "/devices/pci0000:00/0000:00:1f.2/host0/target0:0:0/0:0:0:0/block/sda",
+                                exp_name        => "found",
+                                not_exp_name    => "bad",
+                       }],
                 rules           => <<EOF
 KERNEL=="sda", TAG=""
 TAGS=="|foo", SYMLINK+="found"
@@ -1282,9 +1683,12 @@ EOF
         },
         {
                 desc            => "test multi matches 7",
-                devpath         => "/devices/pci0000:00/0000:00:1f.2/host0/target0:0:0/0:0:0:0/block/sda",
-                exp_name        => "found",
-                not_exp_name    => "bad",
+                devices => [
+                        {
+                                devpath         => "/devices/pci0000:00/0000:00:1f.2/host0/target0:0:0/0:0:0:0/block/sda",
+                                exp_name        => "found",
+                                not_exp_name    => "bad",
+                        }],
                 rules           => <<EOF
 KERNEL=="sda", TAG="foo"
 TAGS=="foo||bar", SYMLINK+="found"
@@ -1293,9 +1697,12 @@ EOF
         },
         {
                 desc            => "test multi matches 8",
-                devpath         => "/devices/pci0000:00/0000:00:1f.2/host0/target0:0:0/0:0:0:0/block/sda",
-                exp_name        => "found",
-                not_exp_name    => "bad",
+                devices => [
+                        {
+                                devpath         => "/devices/pci0000:00/0000:00:1f.2/host0/target0:0:0/0:0:0:0/block/sda",
+                                exp_name        => "found",
+                                not_exp_name    => "bad",
+                        }],
                 rules           => <<EOF
 KERNEL=="sda", TAG=""
 TAGS=="foo||bar", SYMLINK+="found"
@@ -1304,9 +1711,12 @@ EOF
         },
         {
                 desc            => "test multi matches 9",
-                devpath         => "/devices/pci0000:00/0000:00:1f.2/host0/target0:0:0/0:0:0:0/block/sda",
-                exp_name        => "found",
-                not_exp_name    => "bad",
+                devices => [
+                        {
+                                devpath         => "/devices/pci0000:00/0000:00:1f.2/host0/target0:0:0/0:0:0:0/block/sda",
+                                exp_name        => "found",
+                                not_exp_name    => "bad",
+                        }],
                 rules           => <<EOF
 KERNEL=="sda", TAG="foo"
 TAGS=="foo|", SYMLINK+="found"
@@ -1315,9 +1725,12 @@ EOF
         },
         {
                 desc            => "test multi matches 10",
-                devpath         => "/devices/pci0000:00/0000:00:1f.2/host0/target0:0:0/0:0:0:0/block/sda",
-                exp_name        => "found",
-                not_exp_name    => "bad",
+                devices => [
+                        {
+                                devpath         => "/devices/pci0000:00/0000:00:1f.2/host0/target0:0:0/0:0:0:0/block/sda",
+                                exp_name        => "found",
+                                not_exp_name    => "bad",
+                        }],
                 rules           => <<EOF
 KERNEL=="sda", TAG=""
 TAGS=="foo|", SYMLINK+="found"
@@ -1326,9 +1739,12 @@ EOF
         },
         {
                 desc            => "test multi matches 11",
-                devpath         => "/devices/pci0000:00/0000:00:1f.2/host0/target0:0:0/0:0:0:0/block/sda",
-                exp_name        => "found",
-                not_exp_name    => "bad",
+                devices => [
+                        {
+                                devpath         => "/devices/pci0000:00/0000:00:1f.2/host0/target0:0:0/0:0:0:0/block/sda",
+                                exp_name        => "found",
+                                not_exp_name    => "bad",
+                        }],
                 rules           => <<EOF
 KERNEL=="sda", TAG="c"
 TAGS=="foo||bar||c", SYMLINK+="found"
@@ -1337,8 +1753,11 @@ EOF
         },
         {
                 desc            => "IMPORT parent test sequence 1/2 (keep)",
-                devpath         => "/devices/pci0000:00/0000:00:1f.2/host0/target0:0:0/0:0:0:0/block/sda",
-                exp_name        => "parent",
+                devices => [
+                        {
+                                devpath         => "/devices/pci0000:00/0000:00:1f.2/host0/target0:0:0/0:0:0:0/block/sda",
+                                exp_name        => "parent",
+                        }],
                 option          => "keep",
                 rules           => <<EOF
 KERNEL=="sda", IMPORT{program}="/bin/echo -e \'PARENT_KEY=parent_right\\nWRONG_PARENT_KEY=parent_wrong'"
@@ -1347,8 +1766,11 @@ EOF
         },
         {
                 desc            => "IMPORT parent test sequence 2/2 (keep)",
-                devpath         => "/devices/pci0000:00/0000:00:1f.2/host0/target0:0:0/0:0:0:0/block/sda/sda1",
-                exp_name        => "parentenv-parent_right",
+                devices => [
+                        {
+                                devpath         => "/devices/pci0000:00/0000:00:1f.2/host0/target0:0:0/0:0:0:0/block/sda/sda1",
+                                exp_name        => "parentenv-parent_right",
+                        }],
                 option          => "clean",
                 rules           => <<EOF
 KERNEL=="sda1", IMPORT{parent}="PARENT*", SYMLINK+="parentenv-\$env{PARENT_KEY}\$env{WRONG_PARENT_KEY}"
@@ -1356,8 +1778,11 @@ EOF
         },
         {
                 desc            => "GOTO test",
-                devpath         => "/devices/pci0000:00/0000:00:1f.2/host0/target0:0:0/0:0:0:0/block/sda/sda1",
-                exp_name        => "right",
+                devices => [
+                        {
+                                devpath         => "/devices/pci0000:00/0000:00:1f.2/host0/target0:0:0/0:0:0:0/block/sda/sda1",
+                                exp_name        => "right",
+                        }],
                 rules           => <<EOF
 KERNEL=="sda1", GOTO="TEST"
 KERNEL=="sda1", SYMLINK+="wrong"
@@ -1370,8 +1795,11 @@ EOF
         },
         {
                 desc            => "GOTO label does not exist",
-                devpath         => "/devices/pci0000:00/0000:00:1f.2/host0/target0:0:0/0:0:0:0/block/sda/sda1",
-                exp_name        => "right",
+                devices => [
+                        {
+                                devpath         => "/devices/pci0000:00/0000:00:1f.2/host0/target0:0:0/0:0:0:0/block/sda/sda1",
+                                exp_name        => "right",
+                        }],
                 rules           => <<EOF
 KERNEL=="sda1", GOTO="does-not-exist"
 KERNEL=="sda1", SYMLINK+="right",
@@ -1380,9 +1808,12 @@ EOF
         },
         {
                 desc            => "SYMLINK+ compare test",
-                devpath         => "/devices/pci0000:00/0000:00:1f.2/host0/target0:0:0/0:0:0:0/block/sda/sda1",
-                exp_name        => "right",
-                not_exp_name    => "wrong",
+                devices => [
+                        {
+                                devpath         => "/devices/pci0000:00/0000:00:1f.2/host0/target0:0:0/0:0:0:0/block/sda/sda1",
+                                exp_name        => "right",
+                                not_exp_name    => "wrong",
+                        }],
                 rules           => <<EOF
 KERNEL=="sda1", SYMLINK+="link"
 KERNEL=="sda1", SYMLINK=="link*", SYMLINK+="right"
@@ -1391,8 +1822,11 @@ EOF
         },
         {
                 desc            => "invalid key operation",
-                devpath         => "/devices/pci0000:00/0000:00:1f.2/host0/target0:0:0/0:0:0:0/block/sda/sda1",
-                exp_name        => "yes",
+                devices => [
+                        {
+                                devpath         => "/devices/pci0000:00/0000:00:1f.2/host0/target0:0:0/0:0:0:0/block/sda/sda1",
+                                exp_name        => "yes",
+                        }],
                 rules           => <<EOF
 KERNEL="sda1", SYMLINK+="no"
 KERNEL=="sda1", SYMLINK+="yes"
@@ -1400,16 +1834,22 @@ EOF
         },
         {
                 desc            => "operator chars in attribute",
-                devpath         => "/devices/pci0000:00/0000:00:1f.2/host0/target0:0:0/0:0:0:0/block/sda",
-                exp_name        => "yes",
+                devices => [
+                        {
+                                devpath         => "/devices/pci0000:00/0000:00:1f.2/host0/target0:0:0/0:0:0:0/block/sda",
+                                exp_name        => "yes",
+                        }],
                 rules           => <<EOF
 KERNEL=="sda", ATTR{test:colon+plus}=="?*", SYMLINK+="yes"
 EOF
         },
         {
                 desc            => "overlong comment line",
-                devpath         => "/devices/pci0000:00/0000:00:1f.2/host0/target0:0:0/0:0:0:0/block/sda/sda1",
-                exp_name        => "yes",
+                devices => [
+                        {
+                                devpath         => "/devices/pci0000:00/0000:00:1f.2/host0/target0:0:0/0:0:0:0/block/sda/sda1",
+                                exp_name        => "yes",
+                        }],
                 rules           => <<EOF


@@ -1419,16 +1859,22 @@ EOF
         },
         {
                 desc            => "magic subsys/kernel lookup",
-                devpath         => "/devices/pci0000:00/0000:00:1f.2/host0/target0:0:0/0:0:0:0/block/sda",
-                exp_name        => "00:16:41:e2:8d:ff",
+                devices => [
+                        {
+                                devpath         => "/devices/pci0000:00/0000:00:1f.2/host0/target0:0:0/0:0:0:0/block/sda",
+                                exp_name        => "00:16:41:e2:8d:ff",
+                        }],
                 rules           => <<EOF
 KERNEL=="sda", SYMLINK+="\$attr{[net/eth0]address}"
 EOF
         },
         {
                 desc            => "TEST absolute path",
-                devpath         => "/devices/pci0000:00/0000:00:1f.2/host0/target0:0:0/0:0:0:0/block/sda",
-                exp_name        => "there",
+                devices => [
+                        {
+                                devpath         => "/devices/pci0000:00/0000:00:1f.2/host0/target0:0:0/0:0:0:0/block/sda",
+                                exp_name        => "there",
+                        }],
                 rules           => <<EOF
 TEST=="/etc/machine-id", SYMLINK+="there"
 TEST!="/etc/machine-id", SYMLINK+="notthere"
@@ -1436,44 +1882,59 @@ EOF
         },
         {
                 desc            => "TEST subsys/kernel lookup",
-                devpath         => "/devices/pci0000:00/0000:00:1f.2/host0/target0:0:0/0:0:0:0/block/sda",
-                exp_name        => "yes",
+                devices => [
+                        {
+                                devpath         => "/devices/pci0000:00/0000:00:1f.2/host0/target0:0:0/0:0:0:0/block/sda",
+                                exp_name        => "yes",
+                        }],
                 rules           => <<EOF
 KERNEL=="sda", TEST=="[net/eth0]", SYMLINK+="yes"
 EOF
         },
         {
                 desc            => "TEST relative path",
-                devpath         => "/devices/pci0000:00/0000:00:1f.2/host0/target0:0:0/0:0:0:0/block/sda",
-                exp_name        => "relative",
+                devices => [
+                        {
+                                devpath         => "/devices/pci0000:00/0000:00:1f.2/host0/target0:0:0/0:0:0:0/block/sda",
+                                exp_name        => "relative",
+                        }],
                 rules           => <<EOF
 KERNEL=="sda", TEST=="size", SYMLINK+="relative"
 EOF
         },
         {
                 desc            => "TEST wildcard substitution (find queue/nr_requests)",
-                devpath         => "/devices/pci0000:00/0000:00:1f.2/host0/target0:0:0/0:0:0:0/block/sda",
-                exp_name        => "found-subdir",
+                devices => [
+                        {
+                                devpath         => "/devices/pci0000:00/0000:00:1f.2/host0/target0:0:0/0:0:0:0/block/sda",
+                                exp_name        => "found-subdir",
+                        }],
                 rules           => <<EOF
 KERNEL=="sda", TEST=="*/nr_requests", SYMLINK+="found-subdir"
 EOF
         },
         {
                 desc            => "TEST MODE=0000",
-                devpath         => "/devices/pci0000:00/0000:00:1f.2/host0/target0:0:0/0:0:0:0/block/sda",
-                exp_name        => "sda",
-                exp_perms       => "0:0:0000",
-                exp_rem_error   => "yes",
+                devices => [
+                        {
+                                devpath         => "/devices/pci0000:00/0000:00:1f.2/host0/target0:0:0/0:0:0:0/block/sda",
+                                exp_name        => "sda",
+                                exp_perms       => "0:0:0000",
+                                exp_rem_error   => "yes",
+                        }],
                 rules           => <<EOF
 KERNEL=="sda", MODE="0000"
 EOF
         },
         {
                 desc            => "TEST PROGRAM feeds OWNER, GROUP, MODE",
-                devpath         => "/devices/pci0000:00/0000:00:1f.2/host0/target0:0:0/0:0:0:0/block/sda",
-                exp_name        => "sda",
-                exp_perms       => "1:1:0400",
-                exp_rem_error   => "yes",
+                devices => [
+                        {
+                                devpath         => "/devices/pci0000:00/0000:00:1f.2/host0/target0:0:0/0:0:0:0/block/sda",
+                                exp_name        => "sda",
+                                exp_perms       => "1:1:0400",
+                                exp_rem_error   => "yes",
+                        }],
                 rules           => <<EOF
 KERNEL=="sda", MODE="666"
 KERNEL=="sda", PROGRAM=="/bin/echo 1 1 0400", OWNER="%c{1}", GROUP="%c{2}", MODE="%c{3}"
@@ -1481,10 +1942,13 @@ EOF
         },
         {
                 desc            => "TEST PROGRAM feeds MODE with overflow",
-                devpath         => "/devices/pci0000:00/0000:00:1f.2/host0/target0:0:0/0:0:0:0/block/sda",
-                exp_name        => "sda",
-                exp_perms       => "0:0:0440",
-                exp_rem_error   => "yes",
+                devices => [
+                        {
+                                devpath         => "/devices/pci0000:00/0000:00:1f.2/host0/target0:0:0/0:0:0:0/block/sda",
+                                exp_name        => "sda",
+                                exp_perms       => "0:0:0440",
+                                exp_rem_error   => "yes",
+                        }],
                 rules           => <<EOF
 KERNEL=="sda", MODE="440"
 KERNEL=="sda", PROGRAM=="/bin/echo 0 0 0400letsdoabuffferoverflow0123456789012345789012345678901234567890", OWNER="%c{1}", GROUP="%c{2}", MODE="%c{3}"
@@ -1492,9 +1956,12 @@ EOF
         },
         {
                 desc            => "magic [subsys/sysname] attribute substitution",
-                devpath         => "/devices/pci0000:00/0000:00:1f.2/host0/target0:0:0/0:0:0:0/block/sda",
-                exp_name        => "sda-8741C4G-end",
-                exp_perms       => "0:0:0600",
+                devices => [
+                        {
+                                devpath         => "/devices/pci0000:00/0000:00:1f.2/host0/target0:0:0/0:0:0:0/block/sda",
+                                exp_name        => "sda-8741C4G-end",
+                                exp_perms       => "0:0:0600",
+                        }],
                 rules           => <<EOF
 KERNEL=="sda", PROGRAM="/bin/true create-envp"
 KERNEL=="sda", ENV{TESTENV}="change-envp"
@@ -1503,8 +1970,11 @@ EOF
         },
         {
                 desc            => "builtin path_id",
-                devpath         => "/devices/pci0000:00/0000:00:1f.2/host0/target0:0:0/0:0:0:0/block/sda",
-                exp_name        => "disk/by-path/pci-0000:00:1f.2-scsi-0:0:0:0",
+                devices => [
+                        {
+                                devpath         => "/devices/pci0000:00/0000:00:1f.2/host0/target0:0:0/0:0:0:0/block/sda",
+                                exp_name        => "disk/by-path/pci-0000:00:1f.2-scsi-0:0:0:0",
+                        }],
                 rules           => <<EOF
 KERNEL=="sda", IMPORT{builtin}="path_id"
 KERNEL=="sda", ENV{ID_PATH}=="?*", SYMLINK+="disk/by-path/\$env{ID_PATH}"
@@ -1512,9 +1982,12 @@ EOF
         },
         {
                 desc            => "add and match tag",
-                devpath         => "/devices/pci0000:00/0000:00:1f.2/host0/target0:0:0/0:0:0:0/block/sda",
-                exp_name        => "found",
-                not_exp_name    => "bad",
+                devices => [
+                        {
+                                devpath         => "/devices/pci0000:00/0000:00:1f.2/host0/target0:0:0/0:0:0:0/block/sda",
+                                exp_name        => "found",
+                                not_exp_name    => "bad" ,
+                        }],
                 rules           => <<EOF
 SUBSYSTEMS=="scsi", ATTRS{vendor}=="ATA", TAG+="green"
 TAGS=="green", SYMLINK+="found"
@@ -1523,17 +1996,23 @@ EOF
         },
         {
                 desc            => "don't crash with lots of tags",
-                devpath         => "/devices/pci0000:00/0000:00:1f.2/host0/target0:0:0/0:0:0:0/block/sda",
-                exp_name        => "found",
+                devices => [
+                        {
+                                devpath         => "/devices/pci0000:00/0000:00:1f.2/host0/target0:0:0/0:0:0:0/block/sda",
+                                exp_name        => "found",
+                        }],
                 rules           => $rules_10k_tags . <<EOF
 TAGS=="test1", TAGS=="test500", TAGS=="test1234", TAGS=="test9999", TAGS=="test10000", SYMLINK+="found"
 EOF
         },
         {
                 desc            => "continuations",
-                devpath         => "/devices/pci0000:00/0000:00:1f.2/host0/target0:0:0/0:0:0:0/block/sda",
-                exp_name        => "found",
-                not_exp_name    => "bad",
+                devices => [
+                        {
+                                devpath         => "/devices/pci0000:00/0000:00:1f.2/host0/target0:0:0/0:0:0:0/block/sda",
+                                exp_name        => "found",
+                                not_exp_name    => "bad",
+                        }],
                 rules           => $rules_10k_tags_continuation . <<EOF
 TAGS=="test1", TAGS=="test500", TAGS=="test1234", TAGS=="test9999", TAGS=="test10000", SYMLINK+="bad"
 KERNEL=="sda",\\
@@ -1551,9 +2030,13 @@ EOF
         },
         {
                 desc            => "continuations with empty line",
-                devpath         => "/devices/pci0000:00/0000:00:1f.2/host0/target0:0:0/0:0:0:0/block/sda",
-                exp_name        => "found",
-                not_exp_name    => "bad",
+                devices => [
+                        {
+                                devpath         => "/devices/pci0000:00/0000:00:1f.2/host0/target0:0:0/0:0:0:0/block/sda",
+                                exp_name        => "found",
+                                not_exp_name    => "bad",
+
+                        }],
                 rules           => <<EOF
 # empty line finishes continuation
 KERNEL=="sda", TAG+="foo" \\
@@ -1563,13 +2046,16 @@ KERNEL=="sda", TAG+="aaa" \\
 KERNEL=="sdb", TAG+="bbb"
 TAGS=="foo", SYMLINK+="found"
 TAGS=="aaa", SYMLINK+="bad"
-EOF
+                    EOF
         },
         {
                 desc            => "continuations with white only line",
-                devpath         => "/devices/pci0000:00/0000:00:1f.2/host0/target0:0:0/0:0:0:0/block/sda",
-                exp_name        => "found",
-                not_exp_name    => "bad",
+                devices => [
+                        {
+                                devpath         => "/devices/pci0000:00/0000:00:1f.2/host0/target0:0:0/0:0:0:0/block/sda",
+                                exp_name        => "found",
+                                not_exp_name    => "bad",
+                        }],
                 rules           => <<EOF
 # space only line finishes continuation
 KERNEL=="sda", TAG+="foo" \\
@@ -1709,43 +2195,33 @@ sub udev_setup {
         return 1;
 }
 
-sub run_test {
-        my ($rules, $number) = @_;
-        my $rc;
-
-        print "TEST $number: $rules->{desc}\n";
-        print "device \'$rules->{devpath}\' expecting node/link \'$rules->{exp_name}\'\n";
+sub check_add {
+        my ($device) = @_;
 
-        $rc = udev("add", $rules->{devpath}, \$rules->{rules});
-        if ($rc != 0) {
-                print "$udev_bin add failed with code $rc\n";
-                $error++;
-        }
-        if (defined($rules->{not_exp_name})) {
-                if ((-e "$udev_dev/$rules->{not_exp_name}") ||
-                    (-l "$udev_dev/$rules->{not_exp_name}")) {
-                        print "nonexistent: error \'$rules->{not_exp_name}\' not expected to be there\n";
+        if (defined($device->{not_exp_name})) {
+                if ((-e "$udev_dev/$device->{not_exp_name}") ||
+                    (-l "$udev_dev/$device->{not_exp_name}")) {
+                        print "nonexistent: error \'$device->{not_exp_name}\' not expected to be there\n";
                         $error++;
                         sleep(1);
                 }
         }
-
-        if ((-e "$udev_dev/$rules->{exp_name}") ||
-            (-l "$udev_dev/$rules->{exp_name}")) {
+        if ((-e "$udev_dev/$device->{exp_name}") ||
+            (-l "$udev_dev/$device->{exp_name}")) {
 
                 my ($dev, $ino, $mode, $nlink, $uid, $gid, $rdev, $size,
-                    $atime, $mtime, $ctime, $blksize, $blocks) = stat("$udev_dev/$rules->{exp_name}");
+                    $atime, $mtime, $ctime, $blksize, $blocks) = stat("$udev_dev/$device->{exp_name}");
 
-                if (defined($rules->{exp_perms})) {
-                        permissions_test($rules, $uid, $gid, $mode);
+                if (defined($device->{exp_perms})) {
+                        permissions_test($device, $uid, $gid, $mode);
                 }
-                if (defined($rules->{exp_majorminor})) {
-                        major_minor_test($rules, $rdev);
+                if (defined($device->{exp_majorminor})) {
+                        major_minor_test($device, $rdev);
                 }
-                print "add:         ok\n";
+                print "add $device->{devpath}:         ok\n";
         } else {
-                print "add:         error";
-                if ($rules->{exp_add_error}) {
+                print "add  $device->{devpath}:         error";
+                if ($device->{exp_add_error}) {
                         print " as expected\n";
                 } else {
                         print "\n";
@@ -1755,21 +2231,15 @@ sub run_test {
                         sleep(1);
                 }
         }
+}
 
-        if (defined($rules->{option}) && $rules->{option} eq "keep") {
-                print "\n\n";
-                return;
-        }
+sub check_remove {
+        my ($device) = @_;
 
-        $rc = udev("remove", $rules->{devpath}, \$rules->{rules});
-        if ($rc != 0) {
-                print "$udev_bin remove failed with code $rc\n";
-                $error++;
-        }
-        if ((-e "$udev_dev/$rules->{exp_name}") ||
-            (-l "$udev_dev/$rules->{exp_name}")) {
-                print "remove:      error";
-                if ($rules->{exp_rem_error}) {
+        if ((-e "$udev_dev/$device->{exp_name}") ||
+            (-l "$udev_dev/$device->{exp_name}")) {
+                print "remove  $device->{devpath}:      error";
+                if ($device->{exp_rem_error}) {
                         print " as expected\n";
                 } else {
                         print "\n";
@@ -1779,7 +2249,43 @@ sub run_test {
                         sleep(1);
                 }
         } else {
-                print "remove:      ok\n";
+                print "remove  $device->{devpath}:      ok\n";
+        }
+}
+
+sub run_test {
+        my ($rules, $number) = @_;
+        my $rc;
+        my @devices = @{$rules->{devices}};
+
+        print "TEST $number: $rules->{desc}\n";
+        foreach my $dev (@devices) {
+                print "device \'$dev->{devpath}\' expecting node/link \'$dev->{exp_name}\'\n";
+                $rc = udev("add", $dev->{devpath}, \$rules->{rules});
+                if ($rc != 0) {
+                        print "$udev_bin add failed with code $rc\n";
+                        $error++;
+                }
+        }
+
+        foreach my $dev (@devices) {
+                check_add($dev);
+        }
+
+        if (defined($rules->{option}) && $rules->{option} eq "keep") {
+                print "\n\n";
+                return;
+        }
+
+        foreach my $dev (@devices) {
+                $rc = udev("remove", $dev->{devpath}, \$rules->{rules});
+                if ($rc != 0) {
+                        print "$udev_bin remove failed with code $rc\n";
+                        $error++;
+                }
+        }
+        foreach my $dev (@devices) {
+                check_remove($dev);
         }
 
         print "\n";
