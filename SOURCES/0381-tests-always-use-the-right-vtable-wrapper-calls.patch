From 9a6fa8659e7c6b18c95754e6fa9417f03b6341df Mon Sep 17 00:00:00 2001
From: Lennart Poettering <lennart@poettering.net>
Date: Mon, 19 Nov 2018 14:48:28 +0100
Subject: [PATCH] tests: always use the right vtable wrapper calls

Prompted by https://github.com/systemd/systemd/pull/10836#discussion_r234598868

(cherry picked from commit bd7989a3d90e5d97e09f1eef33d09b2469a79f4d)

Related: #1737283
---
 src/test/test-execute.c |  2 +-
 src/test/test-path.c    | 18 +++++++++---------
 2 files changed, 10 insertions(+), 10 deletions(-)

diff --git a/src/test/test-execute.c b/src/test/test-execute.c
index 0f8dc883b1..d88de52d2a 100644
--- a/src/test/test-execute.c
+++ b/src/test/test-execute.c
@@ -129,7 +129,7 @@ static void test(Manager *m, const char *unit_name, int status_expected, int cod
         assert_se(unit_name);
 
         assert_se(manager_load_startable_unit_or_warn(m, unit_name, NULL, &unit) >= 0);
-        assert_se(UNIT_VTABLE(unit)->start(unit) >= 0);
+        assert_se(unit_start(unit) >= 0);
         check(m, unit, status_expected, code_expected);
 }
 
diff --git a/src/test/test-path.c b/src/test/test-path.c
index 209eb2e366..3a1469ae02 100644
--- a/src/test/test-path.c
+++ b/src/test/test-path.c
@@ -106,7 +106,7 @@ static void check_stop_unlink(Manager *m, Unit *unit, const char *test_path, con
                 }
         }
 
-        assert_se(UNIT_VTABLE(unit)->stop(unit) >= 0);
+        assert_se(unit_stop(unit) >= 0);
         (void) rm_rf(test_path, REMOVE_ROOT|REMOVE_PHYSICAL);
 }
 
@@ -117,7 +117,7 @@ static void test_path_exists(Manager *m) {
         assert_se(m);
 
         assert_se(manager_load_startable_unit_or_warn(m, "path-exists.path", NULL, &unit) >= 0);
-        assert_se(UNIT_VTABLE(unit)->start(unit) >= 0);
+        assert_se(unit_start(unit) >= 0);
 
         assert_se(touch(test_path) >= 0);
 
@@ -130,7 +130,7 @@ static void test_path_existsglob(Manager *m) {
 
         assert_se(m);
         assert_se(manager_load_startable_unit_or_warn(m, "path-existsglob.path", NULL, &unit) >= 0);
-        assert_se(UNIT_VTABLE(unit)->start(unit) >= 0);
+        assert_se(unit_start(unit) >= 0);
 
         assert_se(touch(test_path) >= 0);
 
@@ -147,7 +147,7 @@ static void test_path_changed(Manager *m) {
         assert_se(touch(test_path) >= 0);
 
         assert_se(manager_load_startable_unit_or_warn(m, "path-changed.path", NULL, &unit) >= 0);
-        assert_se(UNIT_VTABLE(unit)->start(unit) >= 0);
+        assert_se(unit_start(unit) >= 0);
 
         f = fopen(test_path, "w");
         assert_se(f);
@@ -166,7 +166,7 @@ static void test_path_modified(Manager *m) {
         assert_se(touch(test_path) >= 0);
 
         assert_se(manager_load_startable_unit_or_warn(m, "path-modified.path", NULL, &unit) >= 0);
-        assert_se(UNIT_VTABLE(unit)->start(unit) >= 0);
+        assert_se(unit_start(unit) >= 0);
 
         f = fopen(test_path, "w");
         assert_se(f);
@@ -182,7 +182,7 @@ static void test_path_unit(Manager *m) {
         assert_se(m);
 
         assert_se(manager_load_startable_unit_or_warn(m, "path-unit.path", NULL, &unit) >= 0);
-        assert_se(UNIT_VTABLE(unit)->start(unit) >= 0);
+        assert_se(unit_start(unit) >= 0);
 
         assert_se(touch(test_path) >= 0);
 
@@ -198,7 +198,7 @@ static void test_path_directorynotempty(Manager *m) {
         assert_se(access(test_path, F_OK) < 0);
 
         assert_se(manager_load_startable_unit_or_warn(m, "path-directorynotempty.path", NULL, &unit) >= 0);
-        assert_se(UNIT_VTABLE(unit)->start(unit) >= 0);
+        assert_se(unit_start(unit) >= 0);
 
         /* MakeDirectory default to no */
         assert_se(access(test_path, F_OK) < 0);
@@ -219,7 +219,7 @@ static void test_path_makedirectory_directorymode(Manager *m) {
         assert_se(access(test_path, F_OK) < 0);
 
         assert_se(manager_load_startable_unit_or_warn(m, "path-makedirectory.path", NULL, &unit) >= 0);
-        assert_se(UNIT_VTABLE(unit)->start(unit) >= 0);
+        assert_se(unit_start(unit) >= 0);
 
         /* Check if the directory has been created */
         assert_se(access(test_path, F_OK) >= 0);
@@ -230,7 +230,7 @@ static void test_path_makedirectory_directorymode(Manager *m) {
         assert_se((s.st_mode & S_IRWXG) == 0040);
         assert_se((s.st_mode & S_IRWXO) == 0004);
 
-        assert_se(UNIT_VTABLE(unit)->stop(unit) >= 0);
+        assert_se(unit_stop(unit) >= 0);
         (void) rm_rf(test_path, REMOVE_ROOT|REMOVE_PHYSICAL);
 }
 
