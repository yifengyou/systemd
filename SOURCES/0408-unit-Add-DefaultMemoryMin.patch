From 69dbbc29f26569fd09f0109e6fbebde98c0c8567 Mon Sep 17 00:00:00 2001
From: Chris Down <chris@chrisdown.name>
Date: Tue, 16 Apr 2019 18:44:05 +0100
Subject: [PATCH] unit: Add DefaultMemoryMin

(cherry picked from commit 7ad5439e0663e39e36619957fa37eefe8026bcab)

Related: #1763435
---
 src/core/cgroup.c         |  3 +++
 src/core/cgroup.h         |  4 ++++
 src/core/dbus-cgroup.c    |  6 ++++++
 src/core/load-fragment.c  | 11 +++++++++--
 src/systemctl/systemctl.c |  2 ++
 5 files changed, 24 insertions(+), 2 deletions(-)

diff --git a/src/core/cgroup.c b/src/core/cgroup.c
index 46a89ff5e1..d40f9cbc2a 100644
--- a/src/core/cgroup.c
+++ b/src/core/cgroup.c
@@ -220,6 +220,7 @@ void cgroup_context_dump(CGroupContext *c, FILE* f, const char *prefix) {
                 "%sStartupIOWeight=%" PRIu64 "\n"
                 "%sBlockIOWeight=%" PRIu64 "\n"
                 "%sStartupBlockIOWeight=%" PRIu64 "\n"
+                "%sDefaultMemoryMin=%" PRIu64 "\n"
                 "%sDefaultMemoryLow=%" PRIu64 "\n"
                 "%sMemoryMin=%" PRIu64 "\n"
                 "%sMemoryLow=%" PRIu64 "\n"
@@ -248,6 +249,7 @@ void cgroup_context_dump(CGroupContext *c, FILE* f, const char *prefix) {
                 prefix, c->startup_io_weight,
                 prefix, c->blockio_weight,
                 prefix, c->startup_blockio_weight,
+                prefix, c->default_memory_min,
                 prefix, c->default_memory_low,
                 prefix, c->memory_min,
                 prefix, c->memory_low,
@@ -402,6 +404,7 @@ int cgroup_add_device_allow(CGroupContext *c, const char *dev, const char *mode)
 }
 
 UNIT_DEFINE_ANCESTOR_MEMORY_LOOKUP(memory_low);
+UNIT_DEFINE_ANCESTOR_MEMORY_LOOKUP(memory_min);
 
 static int lookup_block_device(const char *p, dev_t *ret) {
         struct stat st;
diff --git a/src/core/cgroup.h b/src/core/cgroup.h
index a263d6a169..976224336d 100644
--- a/src/core/cgroup.h
+++ b/src/core/cgroup.h
@@ -95,6 +95,7 @@ struct CGroupContext {
         LIST_HEAD(CGroupIODeviceLimit, io_device_limits);
         LIST_HEAD(CGroupIODeviceLatency, io_device_latencies);
 
+        uint64_t default_memory_min;
         uint64_t default_memory_low;
         uint64_t memory_min;
         uint64_t memory_low;
@@ -102,7 +103,9 @@ struct CGroupContext {
         uint64_t memory_max;
         uint64_t memory_swap_max;
 
+        bool default_memory_min_set;
         bool default_memory_low_set;
+        bool memory_min_set;
         bool memory_low_set;
 
         LIST_HEAD(IPAddressAccessItem, ip_address_allow);
@@ -195,6 +198,7 @@ Unit *manager_get_unit_by_cgroup(Manager *m, const char *cgroup);
 Unit *manager_get_unit_by_pid_cgroup(Manager *m, pid_t pid);
 Unit* manager_get_unit_by_pid(Manager *m, pid_t pid);
 
+uint64_t unit_get_ancestor_memory_min(Unit *u);
 uint64_t unit_get_ancestor_memory_low(Unit *u);
 
 int unit_search_main_pid(Unit *u, pid_t *ret);
diff --git a/src/core/dbus-cgroup.c b/src/core/dbus-cgroup.c
index 2115d43b0c..e1278c317a 100644
--- a/src/core/dbus-cgroup.c
+++ b/src/core/dbus-cgroup.c
@@ -669,6 +669,9 @@ int bus_cgroup_set_property(
         if (streq(name, "MemoryLow"))
                 return bus_cgroup_set_memory(u, name, &c->memory_low, message, flags, error);
 
+        if (streq(name, "DefaultMemoryMin"))
+                return bus_cgroup_set_memory(u, name, &c->default_memory_min, message, flags, error);
+
         if (streq(name, "DefaultMemoryLow"))
                 return bus_cgroup_set_memory(u, name, &c->default_memory_low, message, flags, error);
 
@@ -690,6 +693,9 @@ int bus_cgroup_set_property(
         if (streq(name, "MemoryLowScale"))
                 return bus_cgroup_set_memory_scale(u, name, &c->memory_low, message, flags, error);
 
+        if (streq(name, "DefaultMemoryMinScale"))
+                return bus_cgroup_set_memory_scale(u, name, &c->default_memory_min, message, flags, error);
+
         if (streq(name, "DefaultMemoryLowScale"))
                 return bus_cgroup_set_memory_scale(u, name, &c->default_memory_low, message, flags, error);
 
diff --git a/src/core/load-fragment.c b/src/core/load-fragment.c
index 20faed02ad..3b8ee6b124 100644
--- a/src/core/load-fragment.c
+++ b/src/core/load-fragment.c
@@ -3102,9 +3102,16 @@ int config_parse_memory_limit(
                         c->default_memory_low = CGROUP_LIMIT_MIN;
                 else
                         c->default_memory_low = bytes;
-        } else if (streq(lvalue, "MemoryMin"))
+        } else if (streq(lvalue, "DefaultMemoryMin")) {
+                c->default_memory_min_set = true;
+                if (isempty(rvalue))
+                        c->default_memory_min = CGROUP_LIMIT_MIN;
+                else
+                        c->default_memory_min = bytes;
+        } else if (streq(lvalue, "MemoryMin")) {
                 c->memory_min = bytes;
-        else if (streq(lvalue, "MemoryLow")) {
+                c->memory_min_set = true;
+        } else if (streq(lvalue, "MemoryLow")) {
                 c->memory_low = bytes;
                 c->memory_low_set = true;
         } else if (streq(lvalue, "MemoryHigh"))
diff --git a/src/systemctl/systemctl.c b/src/systemctl/systemctl.c
index 763ca0c6b7..e0db97e339 100644
--- a/src/systemctl/systemctl.c
+++ b/src/systemctl/systemctl.c
@@ -3918,6 +3918,7 @@ typedef struct UnitStatusInfo {
         uint64_t ip_ingress_bytes;
         uint64_t ip_egress_bytes;
 
+        uint64_t default_memory_min;
         uint64_t default_memory_low;
 
         LIST_HEAD(ExecStatusInfo, exec);
@@ -5030,6 +5031,7 @@ static int show_one(
                 { "Where",                          "s",              NULL,           offsetof(UnitStatusInfo, where)                             },
                 { "What",                           "s",              NULL,           offsetof(UnitStatusInfo, what)                              },
                 { "MemoryCurrent",                  "t",              NULL,           offsetof(UnitStatusInfo, memory_current)                    },
+                { "DefaultMemoryMin",               "t",              NULL,           offsetof(UnitStatusInfo, default_memory_min)                },
                 { "DefaultMemoryLow",               "t",              NULL,           offsetof(UnitStatusInfo, default_memory_low)                },
                 { "MemoryMin",                      "t",              NULL,           offsetof(UnitStatusInfo, memory_min)                        },
                 { "MemoryLow",                      "t",              NULL,           offsetof(UnitStatusInfo, memory_low)                        },
